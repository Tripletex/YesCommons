{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/orgnr.js","webpack:///./src/mod11.js","webpack:///./src/app.js","webpack:///./src/kontonr.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gen","Math","floor","random","num1","num2","num3","num4","num5","num6","num7","num8","contr","MOD11weights","getCheckDigit","accountNumber","tempArr","split","length","shift","sum","accountNumberArray","map","num","parseInt","index","reduce","acc","val","mod11","replace","reverse","join","getReversedAccountNumber","newOrgNr","document","querySelector","innerText","nummer","orgnr","newKontoNr","generateAccountNumber","weighted","addEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function gen() {\n\tconst n = () => Math.floor(Math.random()*10);\n\n\tconst num1 = (Math.floor(Math.random()*9) + 1), // special case; cannot be 0\n\t\tnum2 = n(),\n\t\tnum3 = n(),\n\t\tnum4 = n(),\n\t\tnum5 = n(),\n\t\tnum6 = n(),\n\t\tnum7 = n(),\n\t\tnum8 = n();\n\n\t// Weights: 3 2 7 6 5 4 3 2\n\tvar weighted = num1*3 + num2*2 + num3*7 + num4*6 + num5*5 + num6*4 + num7*3 + num8*2;\n\tvar remainder = weighted % 11;\n\tvar contr = 11 - remainder;\n\tif (contr === 11) contr = 0;\n\n\tif (contr === 10)\n       return null;\n\telse\n\t\treturn \"\" + num1 + num2 + num3 + num4 + num5 + num6 + num7 + num8 + contr;\n}\n\n/**\n * Generate a random number that satisfies the norwegian \"Organization number\" demands wrt control number.\n */\nexport default function orgnr() {\n\tlet nummer = null;\n  \n\tdo {\n\t\tnummer = gen();\n\t} while(nummer === null);\n\n\treturn nummer;\n}\n","const MOD11weights = [2, 3, 4, 5, 6, 7, 2, 3, 4, 5];\n\n/**\n *\n * @param {string} accountNumber A string of the account number value\n * @returns {string} The account number reversed and removed of non-numerical chars\n */\nfunction getReversedAccountNumber(accountNumber) {\n  const num = accountNumber\n    .replace(/\\D+/g, '')\n    .split('')\n    .reverse()\n    .join('');\n\n  return num;\n}\n\n/**\n *\n * @param {string} accountNumber A string of the account number value\n * @returns {number} Function call to mod11 --> integer\n */\nexport function getCheckDigit(accountNumber) {\n  let reversedAccountNumber = getReversedAccountNumber(accountNumber);\n  return mod11(reversedAccountNumber);\n}\n\n/**\n *\n * @param {string} accountNumber A string of the account number value\n * @returns {number} The integer from the modulo 11 calculation\n */\nfunction mod11(accountNumber) {\n  let tempArr = accountNumber.split('');\n\n  if (tempArr.length === 11) {\n    tempArr.shift();\n  }\n\n  const sum = applyWeights(tempArr);\n\n  return sum % 11 == 0 ? 0 : 11 - (sum % 11);\n}\n\n/**\n *\n * @param {string[]} accountNumberArray\n * @returns {number} The weighted numbers used to calculate the modulo\n */\nfunction applyWeights(accountNumberArray) {\n  return accountNumberArray\n    .map(num => parseInt(num))\n\n    .map((num, index) => num * MOD11weights[index])\n    .reduce((acc, val) => acc + val);\n}\n\n/**\n * Derived from observing:\n * - weights goes from 7 down to 2 in cycles\n * - the last weight is always 2\n * - [7..2] == [5..0] + 2\n *\n * Thus weight for the 'n'th number is:\n * weight(n) = ((n + a) % 6) + 2\n * Find constant 'a' by solving for the 0th digit (ie least significant digit):\n * ((0 + a) % 6) + 2  ==  2\n *  => a == 6\n *\n * @param n: number of digits\n * @returns [ 4, 3, 2, 7, 6, 5, 4, 3, 2 ]\n */\nfunction getDefaultWeights(n) {\n  const weightOf = idx => ((idx + 6) % 6) + 2;\n\n  return Array.from({ length: n }, (val, idx) => idx) // => [0, 1, .., n-1]\n    .reverse() // => [n-1, .., 1, 0]\n    .map(val => weightOf(val)); // => [w(n-1), .., 3, 2]\n}\n","import orgnr from './orgnr.js';\nimport kontonr from './kontonr.js';\n\n\nfunction newOrgNr() {\n\tconst orgSpan = document.querySelector('.js-orgnr');\n\torgSpan.innerText = orgnr();\n}\n\nfunction newKontoNr() {\n\tdocument.querySelector('.js-kontonr').innerText = kontonr();\n}\n\nnewOrgNr();\nnewKontoNr();\n\ndocument.querySelector('.js-gen-orgnr').addEventListener('click', newOrgNr);\ndocument.querySelector('.js-gen-kontonr').addEventListener('click', newKontoNr);\n\n","import { getCheckDigit } from './mod11';\n\n/**\n * @returns {string} The calculated accountNumber as a string\n */\nexport default function generateAccountNumber() {\n  let accountNumber = '';\n  for (let i = 0; i < 10; i++) {\n    accountNumber += Math.floor(Math.random() * 10);\n  }\n\n  const weighted = getCheckDigit(accountNumber);\n\n  if (weighted == 10) {\n    return generateAccountNumber();\n  }\n\n  return accountNumber + weighted;\n}\n\n/**\n *\n * @param {string} accountNumber A string of the account number value\n * @returns Boolean value to see if the checkDigit matches the last cipher in the accountNumber\n */\nexport function validateAccountNumber(accountNumber) {\n  const checkDigit = getCheckDigit(accountNumber);\n  const lastCipher = parseInt(accountNumber[accountNumber.length - 1]);\n\n  return checkDigit === lastCipher;\n}\n"],"sourceRoot":""}