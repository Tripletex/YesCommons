{"version":3,"sources":["webpack://@tripletex/yescommons/./src/lib/fnr/birthdate.ts","webpack://@tripletex/yescommons/./src/lib/fnr/fnr.ts","webpack://@tripletex/yescommons/./src/lib/mod/mod10.ts","webpack://@tripletex/yescommons/./src/lib/mod/mod11.ts","webpack://@tripletex/yescommons/./src/lib/mod/modSteps.ts","webpack://@tripletex/yescommons/./src/lib/util/numberutil.ts","webpack://@tripletex/yescommons/./src/services/fnr.ts","webpack://@tripletex/yescommons/./src/services/kid.ts","webpack://@tripletex/yescommons/./src/services/kontonr.ts","webpack://@tripletex/yescommons/./src/services/orgnr.ts","webpack://@tripletex/yescommons/./src/services/postal.ts","webpack://@tripletex/yescommons/./src/types/types.ts","webpack://@tripletex/yescommons/webpack/bootstrap","webpack://@tripletex/yescommons/webpack/runtime/compat get default export","webpack://@tripletex/yescommons/webpack/runtime/define property getters","webpack://@tripletex/yescommons/webpack/runtime/hasOwnProperty shorthand","webpack://@tripletex/yescommons/./src/app.js"],"names":["generateRandomBirthDate","day","generateRandomIntInRange","month","year","Date","getFullYear","validateAndCreateBirthday","isValidFnrBirthdate","birthdate","length","slice","isDayToBigForMonth","isLeapYear","join","Error","isYearInRange","fromInclusive","toInclusive","isPossiblyDnumber","fnr","isPossiblyHnumber","isPossiblyFHnumber","createValidateFnrReturnObject","success","msg","generateControlDigits","partialFnr","k1","generateFirstControlDigit","generateSecondControlDigit","generateControlDigitsCommon","firstControlDigit","weights","result","i","mod","toString","getFnrBirthdayFromBirthdate","generateRandomIndividualNumber","gender","randomIndividualNumber","parseInt","Gender","male","female","mod10","base","step1","luhn_step1","step2","luhn_step2","step3","luhn_step3_mod10","step4","luhn_step4","step5","luhn_step5_mod10","concat","mod11","luhn_step3_mod11","luhn_step5_mod11","ret","iterations","Math","floor","random","replace","split","map","reverse","digits","shouldDouble","doubled","doubledString","summed","push","toMultiply","multiplied","reduce","a","b","n","fix","inclusiveMin","inclusiveMax","ceil","generateStandardFnr","fnrBirthday","individualNumber","controlDigits","generateFnr","type","FNRType","undefined","h","generateHnumber","d","generateDnumber","fh","generateFHnumber","validateFnr","dnr","thirdDigit","hnr","fhnr","FNR_LENGTH","k2","dnumber","hnumber","fhnumber","validFnr","retTypes","retMsg","err","generateKidMod10","kidInputValidation","generateKidMod11","validateKid_mod10","kid","MIN_KID_LENGTH","MAX_KID_LENGTH","controlDigit","restOfKid","substring","reversed","weighted","validateKid_mod11","sum","getBankRegistryEntryByAccountNumber","accountNumber","registryNumber","getRegistryNumber","registryEntry","find","registry","bank","Bank","bic","BIC","generateAccountNumber","number","orgnr","orgNummer","E","Modulo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","getter","__esModule","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","newFnr","fnrSpan","document","querySelector","fnrType","value","innerText","newOrgNr","addEventListener","kidBase","trim","kidNumberLength","randomKidLength","kidLength","modulo","kidSpan","e","message","bankRegistrySelect","getElementById","selectedRegistryNumber","options","selectedIndex","preventDefault","accountNumberInput","resultSpan","initialAccountNumber","textContent","isValidAccountNumber","validateAccountNumber","isValid","error","fNrInput","fnrToCheck","target","postalCode","municipality"],"mappings":"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mBAC5B,CACL,KAAM,SACN,KAAM,WACN,KAAM,UACN,KAAM,MACN,KAAM,MACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,cACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,OACN,KAAM,YACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,MACN,KAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,YACN,KAAM,YACN,KAAM,MACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,cACN,KAAM,SACN,KAAM,QACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,MACN,KAAM,YACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,YACN,KAAM,YACN,KAAM,cACN,KAAM,eACN,KAAM,eACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,YACN,KAAM,gBACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,gBACN,KAAM,QACN,KAAM,aACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,MACN,KAAM,MACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,aACN,KAAM,kBACN,KAAM,WACN,KAAM,kBACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,OACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,YACN,KAAM,OACN,KAAM,MACN,KAAM,cACN,KAAM,cACN,KAAM,UACN,KAAM,kBACN,KAAM,kBACN,KAAM,iBACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,MACN,KAAM,eACN,KAAM,UACN,KAAM,UACN,KAAM,eACN,KAAM,UACN,KAAM,eACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,eACN,KAAM,eACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,aACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,WACN,KAAM,aACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,gBACN,KAAM,WACN,KAAM,aACN,KAAM,WACN,KAAM,UACN,KAAM,aACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,eACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,SACN,KAAM,MACN,KAAM,MACN,KAAM,gBACN,KAAM,MACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,UACN,KAAM,OACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,cACN,KAAM,WACN,KAAM,SACN,KAAM,WACN,KAAM,YACN,KAAM,cACN,KAAM,cACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,YACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,gBACN,KAAM,gBACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,iBACN,KAAM,SACN,KAAM,QACN,KAAM,SACN,KAAM,WACN,KAAM,oBACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,oBACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,OACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,UACN,KAAM,eACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,aACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,UACN,KAAM,iBACN,KAAM,iBACN,KAAM,gBACN,KAAM,YACN,KAAM,aACN,KAAM,gBACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,OACN,KAAM,OACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,eACN,KAAM,kBACN,KAAM,kBACN,KAAM,YACN,KAAM,eACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,cACN,KAAM,cACN,KAAM,UACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,cACN,KAAM,SACN,KAAM,WACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,OACN,KAAM,WACN,KAAM,WACN,KAAM,gBACN,KAAM,gBACN,KAAM,YACN,KAAM,iBACN,KAAM,iBACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,QACN,KAAM,cACN,KAAM,QACN,KAAM,QACN,KAAM,OACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,OACN,KAAM,QACN,KAAM,MACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,SACN,KAAM,eACN,KAAM,MACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,OACN,KAAM,QACN,KAAM,MACN,KAAM,aACN,KAAM,MACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,SACN,KAAM,OACN,KAAM,UACN,KAAM,MACN,KAAM,QACN,KAAM,SACN,KAAM,WACN,KAAM,OACN,KAAM,UACN,KAAM,YACN,KAAM,SACN,KAAM,MACN,KAAM,OACN,KAAM,WACN,KAAM,OACN,KAAM,UACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,eACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,aACN,KAAM,cACN,KAAM,mBACN,KAAM,YACN,KAAM,cACN,KAAM,OACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,OACN,KAAM,SACN,KAAM,OACN,KAAM,MACN,KAAM,cACN,KAAM,UACN,KAAM,WACN,KAAM,OACN,KAAM,QACN,KAAM,MACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,kBACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,QACN,KAAM,kBACN,KAAM,cACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,aACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,cACN,KAAM,QACN,KAAM,cACN,KAAM,cACN,KAAM,MACN,KAAM,MACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,iBACN,KAAM,iBACN,KAAM,MACN,KAAM,cACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,eACN,KAAM,eACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,MACN,KAAM,MACN,KAAM,aACN,KAAM,WACN,KAAM,WACN,KAAM,MACN,KAAM,OACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,WACN,KAAM,gBACN,KAAM,aACN,KAAM,gBACN,KAAM,YACN,KAAM,QACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,eACN,KAAM,YACN,KAAM,SACN,KAAM,MACN,KAAM,MACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,SACN,KAAM,aACN,KAAM,OACN,KAAM,OACN,KAAM,eACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,cACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,gBACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,OACN,KAAM,cACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,MACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,WACN,KAAM,WACN,KAAM,KACN,KAAM,KACN,KAAM,MACN,KAAM,MACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,WACN,KAAM,YACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,YACN,KAAM,QACN,KAAM,YACN,KAAM,oBACN,KAAM,cACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,OACN,KAAM,eACN,KAAM,eACN,KAAM,YACN,KAAM,gBACN,KAAM,mBACN,KAAM,OACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,OACN,KAAM,WACN,KAAM,aACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,eACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,aACN,KAAM,oBACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,cACN,KAAM,YACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,gBACN,KAAM,QACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,cACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,QACN,KAAM,YACN,KAAM,eACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,OACN,KAAM,SACN,KAAM,OACN,KAAM,YACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,MACN,KAAM,MACN,KAAM,YACN,KAAM,MACN,KAAM,YACN,KAAM,WACN,KAAM,UACN,KAAM,YACN,KAAM,aACN,KAAM,eACN,KAAM,kBACN,KAAM,SACN,KAAM,UACN,KAAM,aACN,KAAM,WACN,KAAM,cACN,KAAM,SACN,KAAM,cACN,KAAM,WACN,KAAM,MACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,OACN,KAAM,mBACN,KAAM,OACN,KAAM,UACN,KAAM,YACN,KAAM,aACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,OACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,SACN,KAAM,OACN,KAAM,UACN,KAAM,QACN,KAAM,SACN,KAAM,cACN,KAAM,OACN,KAAM,cACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,WACN,KAAM,SACN,KAAM,OACN,KAAM,eACN,KAAM,WACN,KAAM,eACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,eACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,OACN,KAAM,MACN,KAAM,MACN,KAAM,QACN,KAAM,gBACN,KAAM,OACN,KAAM,aACN,KAAM,aACN,KAAM,gBACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,iBACN,KAAM,iBACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,MACN,KAAM,YACN,KAAM,SACN,KAAM,MACN,KAAM,UACN,KAAM,YACN,KAAM,aACN,KAAM,OACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,eACN,KAAM,SACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,OACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,gBACN,KAAM,QACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,cACN,KAAM,SACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,UACN,KAAM,gBACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,QACN,KAAM,YACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,eACN,KAAM,MACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,gBACN,KAAM,UACN,KAAM,aACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,MACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,SACN,KAAM,QACN,KAAM,aACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,UACN,KAAM,iBACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,eACN,KAAM,kBACN,KAAM,kBACN,KAAM,aACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,aACN,KAAM,eACN,KAAM,eACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,SACN,KAAM,UACN,KAAM,aACN,KAAM,eACN,KAAM,OACN,KAAM,OACN,KAAM,cACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,gBACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,YACN,KAAM,aACN,KAAM,SACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,oBACN,KAAM,UACN,KAAM,cACN,KAAM,cACN,KAAM,SACN,KAAM,OACN,KAAM,oBACN,KAAM,UACN,KAAM,OACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,QACN,KAAM,MACN,KAAM,YACN,KAAM,YACN,KAAM,iBACN,KAAM,cACN,KAAM,cACN,KAAM,SACN,KAAM,aACN,KAAM,UACN,KAAM,MACN,KAAM,iBACN,KAAM,UACN,KAAM,OACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,WACN,KAAM,OACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,aACN,KAAM,YACN,KAAM,UACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,mBACN,KAAM,aACN,KAAM,UACN,KAAM,aACN,KAAM,SACN,KAAM,QACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,iBACN,KAAM,aACN,KAAM,YACN,KAAM,cACN,KAAM,UACN,KAAM,SACN,KAAM,aACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,QACN,KAAM,uBACN,KAAM,QACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,kBACN,KAAM,eACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,cACN,KAAM,YACN,KAAM,aACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,eACN,KAAM,eACN,KAAM,OACN,KAAM,YACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,OACN,KAAM,WACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,eACN,KAAM,UACN,KAAM,QACN,KAAM,YACN,KAAM,OACN,KAAM,YACN,KAAM,gBACN,KAAM,YACN,KAAM,SACN,KAAM,kBACN,KAAM,WACN,KAAM,OACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,aACN,KAAM,OACN,KAAM,WACN,KAAM,UACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,WACN,KAAM,WACN,KAAM,gBACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,aACN,KAAM,eACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,YACN,KAAM,YACN,KAAM,cACN,KAAM,YACN,KAAM,OACN,KAAM,gBACN,KAAM,OACN,KAAM,aACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,iBACN,KAAM,cACN,KAAM,OACN,KAAM,gBACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,OACN,KAAM,WACN,KAAM,SACN,KAAM,QACN,KAAM,aACN,KAAM,WACN,KAAM,WACN,KAAM,cACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,WACN,KAAM,YACN,KAAM,QACN,KAAM,YACN,KAAM,SACN,KAAM,QACN,KAAM,WACN,KAAM,UACN,KAAM,KACN,KAAM,KACN,KAAM,QACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,gBACN,KAAM,cACN,KAAM,WACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,OACN,KAAM,cACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,YACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,SACN,KAAM,YACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,eACN,KAAM,aACN,KAAM,UACN,KAAM,eACN,KAAM,WACN,KAAM,QACN,KAAM,YACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,SACN,KAAM,UACN,KAAM,cACN,KAAM,SACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,eACN,KAAM,eACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,WACN,KAAM,QACN,KAAM,aACN,KAAM,WACN,KAAM,eACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,OACN,KAAM,aACN,KAAM,aACN,KAAM,OACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,UACN,KAAM,eACN,KAAM,SACN,KAAM,iBACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,eACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,YACN,KAAM,eACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,QACN,KAAM,WACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,cACN,KAAM,aACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,aACN,KAAM,UACN,KAAM,SACN,KAAM,WACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,MACN,KAAM,MACN,KAAM,SACN,KAAM,aACN,KAAM,mBACN,KAAM,UACN,KAAM,eACN,KAAM,UACN,KAAM,aACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,aACN,KAAM,QACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,MACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,OACN,KAAM,WACN,KAAM,SACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,aACN,KAAM,OACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,aACN,KAAM,cACN,KAAM,WACN,KAAM,gBACN,KAAM,gBACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,aACN,KAAM,SACN,KAAM,aACN,KAAM,WACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,gBACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,gBACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,eACN,KAAM,UACN,KAAM,aACN,KAAM,cACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,cACN,KAAM,SACN,KAAM,SACN,KAAM,gBACN,KAAM,cACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,cACN,KAAM,QACN,KAAM,SACN,KAAM,UACN,KAAM,YACN,KAAM,cACN,KAAM,gBACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,WACN,KAAM,OACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,eACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,UACN,KAAM,QACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,aACN,KAAM,QACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,eACN,KAAM,OACN,KAAM,WACN,KAAM,OACN,KAAM,iBACN,KAAM,iBACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,WACN,KAAM,SACN,KAAM,YACN,KAAM,SACN,KAAM,cACN,KAAM,WACN,KAAM,SACN,KAAM,cACN,KAAM,UACN,KAAM,eACN,KAAM,aACN,KAAM,aACN,KAAM,eACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,aACN,KAAM,aACN,KAAM,WACN,KAAM,QACN,KAAM,UACN,KAAM,aACN,KAAM,aACN,KAAM,OACN,KAAM,QACN,KAAM,aACN,KAAM,cACN,KAAM,YACN,KAAM,WACN,KAAM,aACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,eACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,iBACN,KAAM,iBACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,oBACN,KAAM,SACN,KAAM,aACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,eACN,KAAM,QACN,KAAM,YACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,cACN,KAAM,SACN,KAAM,aACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,aACN,KAAM,SACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,cACN,KAAM,UACN,KAAM,QACN,KAAM,aACN,KAAM,cACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,WACN,KAAM,cACN,KAAM,eACN,KAAM,eACN,KAAM,WACN,KAAM,eACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,MACN,KAAM,MACN,KAAM,kBACN,KAAM,kBACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,eACN,KAAM,UACN,KAAM,eACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,SACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,WACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,cACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,SACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,OACN,KAAM,YACN,KAAM,OACN,KAAM,UACN,KAAM,UACN,KAAM,OACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,SACN,KAAM,YACN,KAAM,OACN,KAAM,cACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,UACN,KAAM,OACN,KAAM,UACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,YACN,KAAM,SACN,KAAM,WACN,KAAM,cACN,KAAM,cACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,gBACN,KAAM,OACN,KAAM,OACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,OACN,KAAM,gBACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,MACN,KAAM,mBACN,KAAM,YACN,KAAM,YACN,KAAM,mBACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,YACN,KAAM,eACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,cACN,KAAM,UACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,KAAM,YACN,KAAM,YACN,KAAM,aACN,KAAM,SACN,KAAM,OACN,KAAM,OACN,KAAM,aACN,KAAM,eACN,KAAM,eACN,KAAM,aACN,KAAM,QACN,KAAM,QACN,KAAM,OACN,KAAM,OACN,KAAM,aACN,KAAM,WACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,YACN,KAAM,mBACN,KAAM,SACN,KAAM,WACN,KAAM,QACN,KAAM,WACN,KAAM,cACN,KAAM,cACN,KAAM,aACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,eACN,KAAM,aACN,KAAM,YACN,KAAM,aACN,KAAM,gBACN,KAAM,UACN,KAAM,aACN,KAAM,iBACN,KAAM,aACN,KAAM,QACN,KAAM,SACN,KAAM,YACN,KAAM,aACN,KAAM,YACN,KAAM,cACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,WACN,KAAM,cACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,cACN,KAAM,OACN,KAAM,OACN,KAAM,WACN,KAAM,SACN,KAAM,sBACN,KAAM,UACN,KAAM,QACN,KAAM,cACN,KAAM,cACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,cACN,KAAM,cACN,KAAM,YACN,KAAM,aACN,KAAM,UACN,KAAM,WACN,KAAM,YACN,KAAM,SACN,KAAM,aACN,KAAM,YACN,KAAM,aACN,KAAM,cACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,OACN,KAAM,iBACN,KAAM,WACN,KAAM,UACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,cACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,SACN,KAAM,YACN,KAAM,UACN,KAAM,OACN,KAAM,SACN,KAAM,MACN,KAAM,OACN,KAAM,QACN,KAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,QACN,KAAM,cACN,KAAM,kBACN,KAAM,kBACN,KAAM,cACN,KAAM,UACN,KAAM,QACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,OACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,iBACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,iBACN,KAAM,YACN,KAAM,aACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,aACN,KAAM,cACN,KAAM,YACN,KAAM,cACN,KAAM,eACN,KAAM,eACN,KAAM,eACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,eACN,KAAM,SACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,eACN,KAAM,eACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,YACN,KAAM,WACN,KAAM,QACN,KAAM,WACN,KAAM,aACN,KAAM,cACN,KAAM,SACN,KAAM,eACN,KAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,UACN,KAAM,WACN,KAAM,SACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,MACN,KAAM,UACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,OACN,KAAM,WACN,KAAM,aACN,KAAM,aACN,KAAM,eACN,KAAM,eACN,KAAM,YACN,KAAM,eACN,KAAM,aACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,eACN,KAAM,WACN,KAAM,QACN,KAAM,SACN,KAAM,eACN,KAAM,eACN,KAAM,aACN,KAAM,aACN,KAAM,SACN,KAAM,eACN,KAAM,aACN,KAAM,aACN,KAAM,UACN,KAAM,gBACN,KAAM,aACN,KAAM,eACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,cACN,KAAM,WACN,KAAM,UACN,KAAM,SACN,KAAM,UACN,KAAM,SACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,cACN,KAAM,cACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,aACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,WACN,KAAM,cACN,KAAM,aACN,KAAM,WACN,KAAM,eACN,KAAM,eACN,KAAM,aACN,KAAM,QACN,KAAM,YACN,KAAM,WACN,KAAM,cACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,UACN,KAAM,aACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,oBACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,cACN,KAAM,WACN,KAAM,cACN,KAAM,OACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,OACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,QACN,KAAM,QACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,UACN,KAAM,cACN,KAAM,cACN,KAAM,UACN,KAAM,WACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,aACN,KAAM,YACN,KAAM,gBACN,KAAM,kBACN,KAAM,kBACN,KAAM,cACN,KAAM,aACN,KAAM,SACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,UACN,KAAM,cACN,KAAM,kBACN,KAAM,QACN,KAAM,YACN,KAAM,YACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,aACN,KAAM,SACN,KAAM,UACN,KAAM,UACN,KAAM,YACN,KAAM,YACN,KAAM,WACN,KAAM,WACN,KAAM,QACN,KAAM,aACN,KAAM,aACN,KAAM,OACN,KAAM,YACN,KAAM,cACN,KAAM,WACN,KAAM,cACN,KAAM,SACN,KAAM,gBACN,KAAM,WACN,KAAM,aACN,KAAM,UACN,KAAM,gBACN,KAAM,iBACN,KAAM,WACN,KAAM,QACN,KAAM,WACN,KAAM,SACN,KAAM,SACN,KAAM,cACN,KAAM,SACN,KAAM,iBACN,KAAM,YACN,KAAM,YACN,KAAM,SACN,KAAM,aACN,KAAM,aACN,KAAM,WACN,KAAM,WACN,KAAM,cACN,KAAM,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","file":"bundle.js","sourcesContent":["import { generateRandomIntInRange } from '../util/numberutil'\n\nexport const generateRandomBirthDate = (): string => {\n  const day = generateRandomIntInRange(1, 31)\n  const month = generateRandomIntInRange(1, 12)\n  const year = generateRandomIntInRange(1920, new Date().getFullYear())\n\n  return validateAndCreateBirthday(day, month, year)\n}\n\nexport const isValidFnrBirthdate = (birthdate: string): boolean => {\n  if (birthdate.length == 6) {\n    const day = +birthdate.slice(0, 2)\n    const month = +birthdate.slice(2, 4)\n    const year = +birthdate.slice(-2)\n\n    if (day < 1 || day > 31 || month < 1 || month > 12) return false\n    return !isDayToBigForMonth(day, month, year)\n  }\n  return false\n}\n\nexport const validateAndCreateBirthday = (\n  day: number,\n  month: number,\n  year: number\n): string => {\n  if (month === 2) {\n    if (day > 28) isLeapYear(year) ? (day = 29) : (day = 28)\n  }\n  if (isDayToBigForMonth(day, month)) day = 30\n  return [\n    day < 10 ? '0' + day : day,\n    month < 10 ? '0' + month : month,\n    year,\n  ].join('')\n}\n\nexport const isDayToBigForMonth = (\n  day: number,\n  month: number,\n  year?: number\n): boolean => {\n  switch (month) {\n    case 1:\n    case 3:\n    case 5:\n    case 7:\n    case 8:\n    case 10:\n    case 12:\n      return day > 31\n    case 2:\n      return year && isLeapYear(year) ? day > 29 : day > 28\n    case 4:\n    case 6:\n    case 9:\n    case 11:\n      return day > 30\n    default:\n      throw new Error('Invalid month ' + month)\n  }\n}\n\n/**\n * Checks if the given year is a leap year.\n * Courtesy of <a href=\"https://stackoverflow.com/questions/16353211/check-if-year-is-leap-year-in-javascript\">StackOverflow</a>.\n * @param year the year to check\n */\nexport const isLeapYear = (year: number): boolean => {\n  return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0\n}\n\nexport const isYearInRange = (\n  year: number,\n  fromInclusive: number,\n  toInclusive: number\n): boolean => {\n  return fromInclusive <= year && year <= toInclusive\n}\n","import { Gender, ValidateFnrWrapper } from '../../types/types'\nimport { generateRandomIntInRange } from '../util/numberutil'\nimport { isValidFnrBirthdate, isYearInRange } from './birthdate'\n\nexport const isPossiblyDnumber = (fnr: string): boolean => {\n  const day = +fnr[0]\n  const birthdate = day - 4 + fnr.slice(1, 6)\n  return isValidFnrBirthdate(birthdate)\n}\n\nexport const isPossiblyHnumber = (fnr: string): boolean => {\n  const month = +fnr[2]\n  const birthdate = fnr.slice(0, 2) + (month - 4) + fnr.slice(3, 6)\n  return isValidFnrBirthdate(birthdate)\n}\n\nexport const isPossiblyFHnumber = (fnr: string): boolean => {\n  return fnr[0] === '8' || fnr[0] === '9'\n}\n\nexport const createValidateFnrReturnObject = (\n  success: boolean,\n  msg: string,\n  fnr: string\n): ValidateFnrWrapper => {\n  return { success, msg, fnr }\n}\n\nexport const generateControlDigits = (partialFnr: string): string => {\n  if (partialFnr.length != 9)\n    throw new Error('Invalid partial FNR. Expected format is DDmmYYiii.')\n  const k1 = generateFirstControlDigit(partialFnr)\n  const k2 = generateSecondControlDigit(partialFnr, k1)\n  return k1 + k2\n}\n\nexport const generateFirstControlDigit = (partialFnr: string): string => {\n  const weights = [3, 7, 6, 1, 8, 9, 4, 5, 2]\n  return generateControlDigitsCommon(partialFnr, weights)\n}\n\nexport const generateSecondControlDigit = (\n  partialFnr: string,\n  firstControlDigit: string\n): string => {\n  const weights = [5, 4, 3, 2, 7, 6, 5, 4, 3, 2]\n  return generateControlDigitsCommon(partialFnr + firstControlDigit, weights)\n}\n\nexport const generateControlDigitsCommon = (\n  partialFnr: string,\n  weights: number[]\n): string => {\n  let result = 0\n  for (let i = 0; i < partialFnr.length; i++) {\n    result += +partialFnr[i] * weights[i]\n  }\n  const mod = 11 - (result % 11)\n  return (mod == 11 ? 0 : mod).toString()\n}\n\nexport const getFnrBirthdayFromBirthdate = (birthdate: string): string => {\n  if (birthdate.length != 8)\n    throw new Error(\n      'Birthdate is not of proper length. Expected format is ddMMyyyy'\n    )\n  return birthdate.slice(0, 4) + birthdate.slice(6)\n}\n\nexport const generateRandomIndividualNumber = (\n  birthdate: string,\n  gender: Gender\n): string => {\n  const year = parseInt(birthdate.slice(-4))\n  let randomIndividualNumber: number\n\n  if (isYearInRange(year, 2000, 2039)) {\n    randomIndividualNumber = generateRandomIntInRange(500, 999)\n  } else if (isYearInRange(year, 1940, 1999)) {\n    randomIndividualNumber = generateRandomIntInRange(900, 999)\n  } else if (isYearInRange(year, 1900, 1999)) {\n    randomIndividualNumber = generateRandomIntInRange(0, 499)\n  } else if (isYearInRange(year, 1854, 1899)) {\n    randomIndividualNumber = generateRandomIntInRange(500, 749)\n  } else {\n    throw new Error('Supplied parameter year does not contain a valid year.')\n  }\n\n  if (gender === Gender.male && !(randomIndividualNumber % 2)) {\n    randomIndividualNumber++\n  } else if (gender === Gender.female && randomIndividualNumber % 2 === 1) {\n    randomIndividualNumber--\n  }\n\n  if (randomIndividualNumber < 100)\n    if (randomIndividualNumber < 10) return '00' + randomIndividualNumber\n    else return '0' + randomIndividualNumber\n\n  return randomIndividualNumber.toString()\n}\n","import {\n  luhn_step1,\n  luhn_step2,\n  luhn_step3_mod10,\n  luhn_step4,\n  luhn_step5_mod10,\n} from './modSteps'\n\n/**\n * @desc Algorithm is based on {@link https://en.wikipedia.org/wiki/Luhn_algorithm Luhn}. Summarized:\n *  <ol>\n *    <li>Add random digits to the base until kid is at length - 1, and remove all NaN from kid.</li>\n *    <li>Split it into a number-array, and reverse it.</li>\n *    <li>From the right-most digit, and moving left, double the value of every second digit.\n *        If doubling the digits end up in a two-digit number, then swap the number for the sum of the individual digits.</li>\n *    <li>Sum together all the resulting digits.</li>\n *    <li>Find a number that, when added to the result of the previous step, makes the sum divisible by 10. Append that number to the base.</li>\n *  </ol>\n * @param base The base of the kid.\n * @param length The total length of the kid.\n * @return kid A new randomly generated kid, based on the MOD10-algorithm.\n *\n * @author Henrik Klev\n * @date 2021-06-05\n */\nexport const mod10 = (base: string, length: number): string => {\n  const step1: string = luhn_step1(base, length)\n  const step2: number[] = luhn_step2(step1)\n  const step3: number[] = luhn_step3_mod10(step2)\n  const step4: number = luhn_step4(step3)\n  const step5: string = luhn_step5_mod10(step4)\n  return step1.concat(step5)\n}\n","import {\n  luhn_step1,\n  luhn_step2,\n  luhn_step3_mod11,\n  luhn_step4,\n  luhn_step5_mod11,\n} from './modSteps'\n\n/**\n * @desc Algorithm is based on {@link https://en.wikipedia.org/wiki/Luhn_algorithm Luhn}, altered to be {@link https://no.wikipedia.org/wiki/MOD11 MOD11-based}.\n * Summarized:\n *  <ol>\n *    <li>Add random digits to the base until kid is at length - 1, and remove all NaN from kid.</li>\n *    <li>Split it into a number-array, and reverse it.</li>\n *    <li>From the right-most digit, and moving left, multiply the digit with the next number in the weight-list [2, 3, ..., 7, 2, 3, ...].</li>\n *    <li>Sum together all the resulting digits.</li>\n *    <li>Find a number that, when added to the result of the previous step, makes the sum divisible by 11. Append that number to the base.</li>\n *  </ol>\n * @param base The base of the kid.\n * @param length The total length of the kid.\n * @return kid A new randomly generated kid, based on the MOD11-algorithm.\n *\n * @author Henrik Klev\n * @date 2021-06-06\n */\nexport const mod11 = (base: string, length: number): string => {\n  const step1: string = luhn_step1(base, length)\n  const step2: number[] = luhn_step2(step1)\n  const step3: number[] = luhn_step3_mod11(step2)\n  const step4: number = luhn_step4(step3)\n  const step5: string = luhn_step5_mod11(step4)\n  return step1.concat(step5)\n}\n","export const luhn_step1 = (base: string, length: number): string => {\n  let ret = base\n  const iterations = length - ret.length - 1\n  for (let i = 0; i < iterations; i++) {\n    ret = ret.concat(Math.floor(Math.random() * 10).toString())\n  }\n  return ret.replace(/[^0-9]+/g, '')\n}\n\nexport const luhn_step2 = (base: string): number[] => {\n  return base\n    .split('')\n    .map((i) => +i)\n    .reverse()\n}\n\nexport const luhn_step3_mod10 = (digits: number[]): number[] => {\n  const step3: number[] = []\n  let shouldDouble = true\n  for (let i = 0; i < digits.length; i++) {\n    if (shouldDouble) {\n      const doubled = digits[i] * 2\n      if (doubled > 9) {\n        // We convert the number to a string to get the digits, because JS :)\n        const doubledString = doubled.toString()\n        const summed = parseInt(doubledString[0]) + parseInt(doubledString[1])\n        step3.push(summed)\n      } else {\n        step3.push(doubled)\n      }\n    } else {\n      step3.push(digits[i])\n    }\n    shouldDouble = !shouldDouble\n  }\n  return step3\n}\n\nexport const luhn_step3_mod11 = (digits: number[]): number[] => {\n  const step3: number[] = []\n\n  for (let i = 0; i < digits.length; i++) {\n    const toMultiply = (i % 6) + 2\n    const multiplied = digits[i] * toMultiply\n    step3.push(multiplied)\n  }\n\n  return step3\n}\n\nexport const luhn_step4 = (digits: number[]): number => {\n  return digits.reduce((a, b) => a + b, 0)\n}\n\nexport const luhn_step5_mod10 = (n: number): string => {\n  const overflow = n % 10\n  const fix = 10 - overflow\n  if (fix == 10) return '0'\n  return fix.toString()\n}\n\nexport const luhn_step5_mod11 = (n: number): string => {\n  const overflow = n % 11\n  const fix = 11 - overflow\n  if (fix === 10) {\n    return '-'\n  }\n  if (fix === 11) {\n    return '0'\n  }\n  return fix.toString()\n}\n","export const generateRandomIntInRange = (\n  inclusiveMin: number,\n  inclusiveMax: number\n): number => {\n  inclusiveMin = Math.ceil(inclusiveMin)\n  inclusiveMax = Math.floor(inclusiveMax)\n  return (\n    Math.floor(Math.random() * (inclusiveMax - inclusiveMin + 1)) + inclusiveMin\n  )\n}\n","import { FNR_LENGTH, FNRType, Gender, ValidateFnrWrapper } from '../types/types'\nimport {\n  createValidateFnrReturnObject,\n  generateControlDigits,\n  generateRandomIndividualNumber,\n  getFnrBirthdayFromBirthdate,\n  isPossiblyDnumber,\n  isPossiblyFHnumber,\n  isPossiblyHnumber,\n} from '../lib/fnr/fnr'\nimport {\n  generateRandomBirthDate,\n  isValidFnrBirthdate,\n} from '../lib/fnr/birthdate'\nimport { generateRandomIntInRange } from '../lib/util/numberutil'\n\n/**\n * A Norwegian FNR consists of 11 digits, where the first six digits is\n * the persons birthdate and the five last digits is the person number.\n *\n * The first three digits of the person number is an individual number, while the last two are\n * control digits generated by applying mod11 to the birthdate and individual number.\n *\n * More details can be found at\n * <a href=\"https://www.skatteetaten.no/en/person/national-registry/birth-and-name-selection/children-born-in-norway/national-id-number/>Skatteetaten</a>.\n *\n * @param gender The persons biological gender at birth.\n */\nexport const generateStandardFnr = (gender: Gender): string => {\n  const birthdate = generateRandomBirthDate()\n  const fnrBirthday = getFnrBirthdayFromBirthdate(birthdate)\n  const individualNumber = generateRandomIndividualNumber(birthdate, gender)\n  const partialFnr = fnrBirthday.concat(individualNumber)\n  const controlDigits = generateControlDigits(partialFnr)\n\n  if (controlDigits.length != 2) return generateStandardFnr(gender)\n\n  return [fnrBirthday, individualNumber, controlDigits].join('')\n}\n\nexport const generateFnr = (gender: Gender, type?: FNRType): string => {\n  let fnr\n\n  switch (type) {\n    case FNRType.fnr:\n    case undefined:\n      fnr = generateStandardFnr(gender)\n      break\n    case FNRType.h:\n      fnr = generateHnumber(gender)\n      break\n    case FNRType.d:\n      fnr = generateDnumber(gender)\n      break\n    case FNRType.fh:\n      fnr = generateFHnumber()\n      break\n    default:\n      throw new Error('Invalid FNR-Type ' + type)\n  }\n\n  const validate = validateFnr(fnr)\n\n  if (validate.success) {\n    return fnr\n  }\n\n  throw new Error('Unable to generate valid ' + type)\n}\n\n/**\n * A D-number is a standard FNR where the first digit has been\n * incremented by 4.\n *\n * @param gender The biological gender of the person that shall receive this D-number.\n */\nexport const generateDnumber = (gender: Gender): string => {\n  const fnr = generateStandardFnr(gender)\n  const firstDigit = parseInt(fnr[0]) + 4\n  const base = firstDigit + fnr.slice(1, 9)\n  const dnr = base + generateControlDigits(base)\n  if (dnr.length !== 11) return generateDnumber(gender)\n  return dnr\n}\n\n/**\n * A H-number is a standard FNR where the third digit has been\n * incremented by 4.\n *\n * @param gender The biological gender of the person that shall receive this H-number.\n */\nexport const generateHnumber = (gender: Gender): string => {\n  const fnr = generateStandardFnr(gender)\n  const thirdDigit = parseInt(fnr[2]) + 4\n  const base = fnr.slice(0, 2) + thirdDigit + fnr.slice(3, 9)\n  const hnr = base + generateControlDigits(base)\n  if (hnr.length !== 11) return generateHnumber(gender)\n  return hnr\n}\n\n/**\n * A FH-number is a random sequence of digits where the\n * first digit is either 8 or 9.\n */\nexport const generateFHnumber = (): string => {\n  const base =\n    generateRandomIntInRange(8000, 9999).toString() +\n    generateRandomIntInRange(10000, 99999)\n  const fhnr = base + generateControlDigits(base)\n  if (fhnr.length !== 11) return generateFHnumber()\n  return fhnr\n}\n\nexport const validateFnr = (fnr: string): ValidateFnrWrapper => {\n  try {\n    if (fnr.length != FNR_LENGTH)\n      return createValidateFnrReturnObject(\n        false,\n        `FNR has length ${fnr.length}, should be ${FNR_LENGTH}`,\n        fnr\n      )\n    const k1 = fnr.slice(-2)[0]\n    const k2 = fnr.slice(-1)\n    const partialFnr = fnr.slice(0, 9)\n    const birthdate = fnr.slice(0, 6)\n    const individualNumber = fnr.slice(6, 9)\n\n    const dnumber = isPossiblyDnumber(fnr)\n    const hnumber = isPossiblyHnumber(fnr)\n    const fhnumber = isPossiblyFHnumber(fnr)\n    const validFnr = isValidFnrBirthdate(birthdate)\n\n    if (!validFnr && !dnumber && !hnumber && !fhnumber) {\n      return createValidateFnrReturnObject(\n        false,\n        `Invalid birthday ${birthdate}.`,\n        fnr\n      )\n    }\n\n    const controlDigits = generateControlDigits(partialFnr)\n    if (controlDigits.length != 2)\n      return createValidateFnrReturnObject(\n        false,\n        `This is an invalid FNR; the individual ${individualNumber} number is wrong.`,\n        fnr\n      )\n\n    if (k1 !== controlDigits[0] && k2 !== controlDigits[1])\n      return createValidateFnrReturnObject(\n        false,\n        `Invalid control digits k1 ${k1} and k2 ${k2}`,\n        fnr\n      )\n    if (k1 !== controlDigits[0])\n      return createValidateFnrReturnObject(\n        false,\n        `Invalid control digit k1 ${k1}`,\n        fnr\n      )\n    if (k2 !== controlDigits[1])\n      return createValidateFnrReturnObject(\n        false,\n        `Invalid control digit k2 ${k2}`,\n        fnr\n      )\n\n    let retTypes = []\n    if (validFnr) retTypes.push('FNR')\n    if (dnumber) retTypes.push('D-number')\n    if (hnumber) retTypes.push('H-number')\n    if (fhnumber) retTypes.push('FH-number')\n\n    let retMsg =\n      `The FNR is valid as ${retTypes.length > 1 ? 'types' : 'type'} ` +\n      retTypes.join(', ')\n    return createValidateFnrReturnObject(true, retMsg, fnr)\n  } catch (err) {\n    return createValidateFnrReturnObject(\n      false,\n      'An error was thrown; ' + err,\n      fnr\n    )\n  }\n}\n","import { MAX_KID_LENGTH, MIN_KID_LENGTH } from '../types/types'\nimport {\n  luhn_step2,\n  luhn_step3_mod10,\n  luhn_step3_mod11,\n  luhn_step4,\n} from '../lib/mod/modSteps'\nimport { mod11 } from '../lib/mod/mod11'\nimport { mod10 } from '../lib/mod/mod10'\n\n// This file gave me a headache, so I re-wrote it.\n\n/**\n * Validates the input before calculating a new kid\n * based on the input and the MOD10-algorithm\n * @see mod10\n *\n * @param base The base of the kid.\n * @param length The total length of the kid.\n * @return kid A new randomly generated kid, based on the MOD10-algorithm.\n *\n * @author Henrik Klev\n * @date 2021-06-05\n */\nexport const generateKidMod10 = (base: string, length: number) => {\n  kidInputValidation(base, length)\n  return mod10(base, length)\n}\n\n/**\n * Validates the input before calculating a new kid\n * based on the input and the MOD11-algorithm\n * @see mod11\n *\n * @param base The base of the kid.\n * @param length The total length of the kid.\n * @return kid A new randomly generated kid, based on the MOD11-algorithm.\n *\n * @author Henrik Klev\n * @date 2021-06-06\n */\nexport const generateKidMod11 = (base: string, length: number) => {\n  kidInputValidation(base, length)\n  return mod11(base, length)\n}\n\n/**\n * Checks if a kid is valid based on the MOD10-algorithm.\n * It works similarly to {@link mod10}; except instead of calculating\n * the control digit and appending it, the control digit is calculated\n * and checked to be equal to the control digit in the kid.\n *\n * @param kid The kid to be validated.\n * @return isValidKid <code>true</code> iff valid kid, otherwise <code>false</code>.\n *\n * @author Henrik Klev\n * @date 2021-06-06\n */\nexport const validateKid_mod10 = (kid: string): boolean => {\n  if (kid.length < MIN_KID_LENGTH || kid.length > MAX_KID_LENGTH) return false\n\n  const controlDigit = +kid.slice(-1)\n  const restOfKid = kid.substring(0, kid.length - 1)\n  const reversed = luhn_step2(restOfKid)\n  const weighted = luhn_step3_mod10(reversed)\n  const sum = luhn_step4(weighted)\n  return 10 - (sum % 10) === controlDigit\n}\n\n/**\n * Checks if a kid is valid based on the MOD10-algorithm.\n * It works similarly to {@link mod11}; except instead of calculating\n * the control digit and appending it, the control digit is calculated\n * and checked to be equal to the control digit in the kid.\n *\n * @param kid The kid to be validated.\n * @return isValidKid <code>true</code> iff valid kid, otherwise <code>false</code>.\n *\n * @author Henrik Klev\n * @date 2021-06-06\n */\nexport const validateKid_mod11 = (kid: string): boolean => {\n  if (kid.length < MIN_KID_LENGTH || kid.length > MAX_KID_LENGTH) return false\n\n  const controlDigit = kid.slice(-1)\n  const restOfKid = kid.substring(0, kid.length - 1)\n  const reversed = luhn_step2(restOfKid)\n  const weighted = luhn_step3_mod11(reversed)\n  const sum = luhn_step4(weighted)\n\n  if (controlDigit === '-') return 11 - (sum % 11) === 10\n  else if (controlDigit === '0') {\n    return 11 - (sum % 11) === 11\n  } else return 11 - (sum % 11) === +controlDigit\n}\n\nconst kidInputValidation = (base: string, length: number): void => {\n  if (base.length >= length)\n    throw new Error(\n      'Base-length of kid cannot be greater than, or equal to, total length of kid.'\n    )\n\n  if (length < MIN_KID_LENGTH || length > MAX_KID_LENGTH)\n    throw new Error(\n      `Length of kid must be between ${MIN_KID_LENGTH} and ${MAX_KID_LENGTH}`\n    )\n}\n","import { mod11 } from '../lib/mod/mod11'\nimport { validateKid_mod11 } from './kid'\nimport bankRegistry from '../../bankregistry.json'\n\nexport function generateAccountNumber(\n  registryNumber = getRandomRegistryNumber()\n) {\n  const accountNumber = mod11(registryNumber, 11)\n  if (accountNumber[accountNumber.length - 1] === '-') {\n    return generateAccountNumber(registryNumber)\n  }\n  const registryEntry = getBankRegistryEntryByAccountNumber(accountNumber)\n  return {\n    number: accountNumber,\n    bic: registryEntry.bic,\n    bank: registryEntry.bank,\n    registryNumber: registryEntry.registryNumber,\n  }\n}\n\nexport function validateAccountNumber(accountNumber) {\n  return validateKid_mod11(accountNumber)\n}\n\nfunction getRandomRegistryNumber() {\n  const registryEntry =\n    bankRegistry[Math.floor(Math.random() * bankRegistry.length)]\n  return registryEntry['Bank identifier']\n}\n\nexport function getBankRegistryEntryByAccountNumber(accountNumber) {\n  const registryNumber = getRegistryNumber(accountNumber)\n  const registryEntry = bankRegistry.find(\n    (registry) => registry['Bank identifier'] === registryNumber\n  )\n  if (!registryEntry) {\n    return {\n      bank: 'Ukjent',\n      bic: 'N/A',\n      registryNumber,\n    }\n  }\n  return {\n    bank: registryEntry.Bank,\n    bic: registryEntry.BIC,\n    registryNumber: registryEntry['Bank identifier'],\n  }\n}\n\nfunction getRegistryNumber(accountNumber: string) {\n  return accountNumber.slice(0, 4)\n}\n","import { mod11 } from '../lib/mod/mod11'\n\nexport default function orgnr() {\n  const orgNummer = mod11('', 9)\n\n  if (parseInt(orgNummer[0]) === 0 || orgNummer[orgNummer.length - 1] === '-') {\n    return orgnr()\n  }\n\n  return orgNummer\n}\n","export default function postnummer(E: number): string {\n  if (E >= 1 && E <= 1295) return 'OSLO'\n  if ((E >= 1300 && E <= 1304) || (E >= 1336 && E <= 1338)) return 'SANDVIKA'\n  if (E >= 1324 && E <= 1327) return 'LYSAKER'\n  if ((E >= 1371 && E <= 1373) || (E >= 1383 && E <= 1387)) return 'ASKER'\n  if (E >= 1375 && E <= 1377) return 'BILLINGSTAD'\n  if (E >= 1430 && E <= 1435) return 'ÅS'\n  if (E >= 1440 && E <= 1449) return 'DRØBAK'\n  if (E >= 1450 && E <= 1452) return 'NESODDTANGEN'\n  if (E >= 1462 && E <= 1464) return 'FJELLHAMAR'\n  if (E >= 1465 && E <= 1467) return 'STRØMMEN'\n  if ((E >= 1501 && E <= 1539) || (E >= 1596 && E <= 1599)) return 'MOSS'\n  if (E >= 1540 && E <= 1544) return 'VESTBY'\n  if (E >= 1580 && E <= 1590) return 'RYGGE'\n  if (E >= 1601 && E <= 1619) return 'FREDRIKSTAD'\n  if (E >= 1620 && E <= 1624) return 'GRESSVIK'\n  if (E >= 1629 && E <= 1639) return 'GAMLE FREDRIKSTAD'\n  if (E >= 1650 && E <= 1655) return 'SELLEBAKK'\n  if (E >= 1657 && E <= 1659) return 'TORP'\n  if (E >= 1661 && E <= 1667) return 'ROLVSØY'\n  if (E >= 1670 && E <= 1679) return 'KR�KER�Y'\n  if ((E >= 1701 && E <= 1711) || (E >= 1721 && E <= 1727)) return 'SARPSBORG'\n  if (E >= 1712 && E <= 1714) return 'GR�LUM'\n  if (E >= 1718 && E <= 1720) return 'GRE�KER'\n  if (E >= 1738 && E <= 1740) return 'BORGENHAUGEN'\n  if (E >= 1745 && E <= 1747) return 'SKJEBERG'\n  if (E >= 1751 && E <= 1788) return 'HALDEN'\n  if (E >= 1790 && E <= 1793) return 'TISTEDAL'\n  if (\n    (E >= 1801 && E <= 1803) ||\n    (E >= 1807 && E <= 1815) ||\n    (E >= 1830 && E <= 1833)\n  )\n    return 'ASKIM'\n  if (E >= 1850 && E <= 1852) return 'MYSEN'\n  if (E >= 2000 && E <= 2004) return 'LILLESTRØM'\n  if (E >= 2019 && E <= 2021) return 'SKEDSMOKORSET'\n  if ((E >= 2050 && E <= 2053) || (E >= 2062 && E <= 2069)) return 'JESSHEIM'\n  if ((E >= 2201 && E <= 2209) || (E >= 2211 && E <= 2214)) return 'KONGSVINGER'\n  if ((E >= 2301 && E <= 2311) || (E >= 2315 && E <= 2319)) return 'HAMAR'\n  if (E >= 2312 && E <= 2314) return 'OTTESTAD'\n  if (E >= 2350 && E <= 2351) return 'NES PÅ HEDMARKEN'\n  if (E >= 2380 && E <= 2389) return 'BRUMUNDDAL'\n  if ((E >= 2401 && E <= 2409) || (E >= 2417 && E <= 2419)) return 'ELVERUM'\n  if (E >= 2484 && E <= 2488) return 'RENDALEN'\n  if (\n    (E >= 2601 && E <= 2606) ||\n    (E >= 2613 && E <= 2615) ||\n    (E >= 2617 && E <= 2619) ||\n    (E >= 2622 && E <= 2624)\n  )\n    return 'LILLEHAMMER'\n  if (\n    (E >= 2801 && E <= 2806) ||\n    (E >= 2808 && E <= 2810) ||\n    (E >= 2812 && E <= 2819)\n  )\n    return 'GJ�VIK'\n  if (E >= 2833 && E <= 2835) return 'RAUFOSS'\n  if ((E >= 3001 && E <= 3048) || (E >= 3063 && E <= 3066)) return 'DRAMMEN'\n  if ((E >= 3070 && E <= 3074) || (E >= 3076 && E <= 3077))\n    return 'SANDE I VESTFOLD'\n  if (E >= 3080 && E <= 3089) return 'HOLMESTRAND'\n  if (\n    (E >= 3101 && E <= 3105) ||\n    (E >= 3109 && E <= 3119) ||\n    (E >= 3122 && E <= 3127)\n  )\n    return 'T�NSBERG'\n  if (E >= 3150 && E <= 3154) return 'TOLVSR�D'\n  if ((E >= 3181 && E <= 3183) || (E >= 3186 && E <= 3194)) return 'HORTEN'\n  if ((E >= 3201 && E <= 3242) || (E >= 3246 && E <= 3249)) return 'SANDEFJORD'\n  if (E >= 3251 && E <= 3274) return 'LARVIK'\n  if (E >= 3290 && E <= 3294) return 'STAVERN'\n  if (E >= 3300 && E <= 3303) return 'HOKKSUND'\n  if (E >= 3340 && E <= 3342) return '�MOT'\n  if (E >= 3401 && E <= 3405) return 'LIER'\n  if (E >= 3406 && E <= 3409) return 'TRANBY'\n  if (E >= 3426 && E <= 3428) return 'GULLAUG'\n  if (E >= 3501 && E <= 3519) return 'H�NEFOSS'\n  if ((E >= 3601 && E <= 3607) || (E >= 3609 && E <= 3617)) return 'KONGSBERG'\n  if (E >= 3671 && E <= 3684) return 'NOTODDEN'\n  if ((E >= 3701 && E <= 3747) || (E >= 3796 && E <= 3799)) return 'SKIEN'\n  if (E >= 3800 && E <= 3805) return 'B� I TELEMARK'\n  if ((E >= 3901 && E <= 3946) || (E >= 3996 && E <= 3998)) return 'PORSGRUNN'\n  if (E >= 3960 && E <= 3962) return 'STATHELLE'\n  if (\n    (E >= 4001 && E <= 4036) ||\n    (E >= 4078 && E <= 4082) ||\n    (E >= 4092 && E <= 4095)\n  )\n    return 'STAVANGER'\n  if ((E >= 4041 && E <= 4049) || (E >= 4089 && E <= 4091)) return 'HAFRSFJORD'\n  if (E >= 4056 && E <= 4058) return 'TANANGER'\n  if (E >= 4070 && E <= 4073) return 'RANDABERG'\n  if (E >= 4103 && E <= 4105) return 'J�RPELAND'\n  if (\n    (E >= 4301 && E <= 4309) ||\n    (E >= 4312 && E <= 4329) ||\n    (E >= 4336 && E <= 4338) ||\n    (E >= 4391 && E <= 4394) ||\n    (E >= 4396 && E <= 4399)\n  )\n    return 'SANDNES'\n  if (E >= 4344 && E <= 4346) return 'BRYNE'\n  if (E >= 4350 && E <= 4352) return 'KLEPPE'\n  if (E >= 4370 && E <= 4374) return 'EGERSUND'\n  if (E >= 4400 && E <= 4407) return 'FLEKKEFJORD'\n  if (E >= 4490 && E <= 4492) return 'KVINESDAL'\n  if (E >= 4501 && E <= 4517) return 'MANDAL'\n  if (E >= 4520 && E <= 4524) return 'LINDESNES'\n  if (E >= 4550 && E <= 4554) return 'FARSUND'\n  if (E >= 4557 && E <= 4560) return 'VANSE'\n  if (E >= 4575 && E <= 4580) return 'LYNGDAL'\n  if (\n    (E >= 4604 && E <= 4608) ||\n    (E >= 4610 && E <= 4618) ||\n    (E >= 4620 && E <= 4624) ||\n    (E >= 4626 && E <= 4639) ||\n    (E >= 4661 && E <= 4678) ||\n    (E >= 4686 && E <= 4698)\n  )\n    return 'KRISTIANSAND S'\n  if ((E >= 4640 && E <= 4644) || (E >= 4681 && E <= 4683)) return 'S�GNE'\n  if ((E >= 4700 && E <= 4703) || (E >= 4706 && E <= 4708)) return 'VENNESLA'\n  if (E >= 4733 && E <= 4735) return 'EVJE'\n  if (E >= 4755 && E <= 4756) return 'HOVDEN I SETESDAL'\n  if (E >= 4790 && E <= 4792) return 'LILLESAND'\n  if (\n    (E >= 4801 && E <= 4809) ||\n    (E >= 4836 && E <= 4849) ||\n    (E >= 4856 && E <= 4859)\n  )\n    return 'ARENDAL'\n  if ((E >= 4876 && E <= 4887) || (E >= 4891 && E <= 4898)) return 'GRIMSTAD'\n  if (E >= 4900 && E <= 4905) return 'TVEDESTRAND'\n  if (E >= 4950 && E <= 4957) return 'RIS�R'\n  if ((E >= 5003 && E <= 5099) || (E >= 5802 && E <= 5899)) return 'BERGEN'\n  if (E >= 5115 && E <= 5121) return 'ULSET'\n  if (E >= 5130 && E <= 5132) return 'NYBORG'\n  if (E >= 5141 && E <= 5148) return 'FYLLINGSDALEN'\n  if (E >= 5152 && E <= 5155) return 'B�NES'\n  if (E >= 5160 && E <= 5165) return 'LAKSEV�G'\n  if (E >= 5171 && E <= 5173) return 'LODDEFJORD'\n  if ((E >= 5200 && E <= 5206) || (E >= 5208 && E <= 5211)) return 'OS'\n  if (E >= 5221 && E <= 5228) return 'NESTTUN'\n  if (E >= 5230 && E <= 5232) return 'PARADIS'\n  if (E >= 5235 && E <= 5239) return 'R�DAL'\n  if (E >= 5319 && E <= 5323) return 'KLEPPEST�'\n  if (E >= 5341 && E <= 5343) return 'STRAUME'\n  if ((E >= 5401 && E <= 5407) || (E >= 5414 && E <= 5417)) return 'STORD'\n  if ((E >= 5501 && E <= 5507) || (E >= 5509 && E <= 5538)) return 'HAUGESUND'\n  if (E >= 5555 && E <= 5556) return 'F�RDE I HORDALAND'\n  if (E >= 5600 && E <= 5602) return 'NORHEIMSUND'\n  if (E >= 5700 && E <= 5706) return 'VOSS'\n  if (E >= 5750 && E <= 5752) return 'ODDA'\n  if (E >= 5902 && E <= 5904) return 'ISDALST�'\n  if ((E >= 6001 && E <= 6028) || (E >= 6044 && E <= 6048)) return '�LESUND'\n  if (E >= 6090 && E <= 6092) return 'FOSNAV�G'\n  if (E >= 6100 && E <= 6106) return 'VOLDA'\n  if (E >= 6150 && E <= 6156) return '�RSTA'\n  if (\n    (E >= 6401 && E <= 6407) ||\n    (E >= 6409 && E <= 6416) ||\n    (E >= 6419 && E <= 6429) ||\n    (E >= 6434 && E <= 6436)\n  )\n    return 'MOLDE'\n  if (E >= 6460 && E <= 6461) return 'EIDSV�G I ROMSDAL'\n  if ((E >= 6501 && E <= 6518) || (E >= 6546 && E <= 6549))\n    return 'KRISTIANSUND N'\n  if (E >= 6520 && E <= 6529) return 'FREI'\n  if (E >= 6530 && E <= 6539) return 'AVER�Y'\n  if (E >= 6700 && E <= 6703) return 'M�L�Y'\n  if (E >= 6770 && E <= 6774) return 'NORDFJORDEID'\n  if (E >= 6781 && E <= 6783) return 'STRYN'\n  if ((E >= 6800 && E <= 6805) || (E >= 6807 && E <= 6815)) return 'F�RDE'\n  if (E >= 6821 && E <= 6823) return 'SANDANE'\n  if (E >= 6851 && E <= 6853) return 'SOGNDAL'\n  if (E >= 6900 && E <= 6910) return 'FLOR�'\n  if (E >= 6961 && E <= 6963) return 'DALE I SUNNFJORD'\n  if (E >= 6971 && E <= 6973) return 'SANDE I SUNNFJORD'\n  if (\n    (E >= 7003 && E <= 7052) ||\n    (E >= 7066 && E <= 7069) ||\n    (E >= 7400 && E <= 7498)\n  )\n    return 'TRONDHEIM'\n  if (E >= 7053 && E <= 7056) return 'RANHEIM'\n  if (E >= 7091 && E <= 7093) return 'TILLER'\n  if (E >= 7221 && E <= 7224) return 'MELHUS'\n  if (E >= 7300 && E <= 7303) return 'ORKANGER'\n  if (E >= 7386 && E <= 7388) return 'SINGS�S'\n  if (E >= 7391 && E <= 7399) return 'RENNEBU'\n  if ((E >= 7500 && E <= 7509) || (E >= 7512 && E <= 7514)) return 'STJ�RDAL'\n  if (E >= 7580 && E <= 7583) return 'SELBU'\n  if (E >= 7600 && E <= 7610) return 'LEVANGER'\n  if (E >= 7650 && E <= 7658) return 'VERDAL'\n  if (E >= 7670 && E <= 7672) return 'INDER�Y'\n  if (\n    (E >= 7701 && E <= 7709) ||\n    (E >= 7711 && E <= 7729) ||\n    (E >= 7734 && E <= 7738)\n  )\n    return 'STEINKJER'\n  if (E >= 7800 && E <= 7810) return 'NAMSOS'\n  if (E >= 7900 && E <= 7902) return 'R�RVIK'\n  if ((E >= 8001 && E <= 8049) || (E >= 8070 && E <= 8092)) return 'BOD�'\n  if (E >= 8200 && E <= 8214) return 'FAUSKE'\n  if (E >= 8250 && E <= 8253) return 'ROGNAN'\n  if (E >= 8300 && E <= 8305) return 'SVOLV�R'\n  if ((E >= 8400 && E <= 8408) || (E >= 8415 && E <= 8419)) return 'SORTLAND'\n  if ((E >= 8501 && E <= 8512) || (E >= 8514 && E <= 8519)) return 'NARVIK'\n  if ((E >= 8601 && E <= 8614) || (E >= 8618 && E <= 8626)) return 'MO I RANA'\n  if (E >= 8651 && E <= 8666) return 'MOSJ�EN'\n  if (E >= 8800 && E <= 8809) return 'SANDNESSJ�EN'\n  if (E >= 8850 && E <= 8852) return 'HER�Y'\n  if (E >= 8900 && E <= 8910) return 'BR�NN�YSUND'\n  if (E >= 8920 && E <= 8922) return 'S�MNA'\n  if ((E >= 9006 && E <= 9019) || (E >= 9240 && E <= 9299)) return 'TROMS�'\n  if (E >= 9100 && E <= 9102) return 'KVAL�YSLETTA'\n  if (E >= 9103 && E <= 9105) return 'KVAL�YA'\n  if (E >= 9156 && E <= 9158) return 'STORSLETT'\n  if (E >= 9305 && E <= 9309) return 'FINNSNES'\n  if ((E >= 9402 && E <= 9416) || (E >= 9479 && E <= 9498)) return 'HARSTAD'\n  if (E >= 9501 && E <= 9518) return 'ALTA'\n  if (E >= 9600 && E <= 9603) return 'HAMMERFEST'\n  if (E >= 9802 && E <= 9810) return 'VESTRE JAKOBSELV'\n  return {\n    1305: 'HASLUM',\n    1306: 'SANDVIKA',\n    1307: 'FORNEBU',\n    1308: 'JAR',\n    1309: 'RUD',\n    1311: 'H�VIKODDEN',\n    1312: 'SLEPENDEN',\n    1313: 'V�YENENGA',\n    1314: 'V�YENENGA',\n    1316: 'EIKSMARKA',\n    1317: 'B�RUMS VERK',\n    1318: 'BEKKESTUA',\n    1319: 'BEKKESTUA',\n    1321: 'STABEKK',\n    1322: 'H�VIK',\n    1323: 'H�VIK',\n    1328: 'H�VIK',\n    1329: 'LOMMEDALEN',\n    1330: 'FORNEBU',\n    1331: 'FORNEBU',\n    1332: '�STER�S',\n    1333: 'KOLS�S',\n    1334: 'RYKKINN',\n    1335: 'SNAR�YA',\n    1339: 'V�YENENGA',\n    1340: 'SKUI',\n    1341: 'SLEPENDEN',\n    1342: 'GJETTUM',\n    1344: 'HASLUM',\n    1346: 'GJETTUM',\n    1348: 'RYKKINN',\n    1349: 'RYKKINN',\n    1350: 'LOMMEDALEN',\n    1351: 'RUD',\n    1352: 'KOLS�S',\n    1353: 'B�RUMS VERK',\n    1354: 'B�RUMS VERK',\n    1356: 'BEKKESTUA',\n    1357: 'BEKKESTUA',\n    1358: 'JAR',\n    1359: 'EIKSMARKA',\n    1360: 'FORNEBU',\n    1361: '�STER�S',\n    1362: 'HOSLE',\n    1363: 'H�VIK',\n    1364: 'FORNEBU',\n    1365: 'BLOMMENHOLM',\n    1366: 'LYSAKER',\n    1367: 'SNAR�YA',\n    1368: 'STABEKK',\n    1369: 'STABEKK',\n    1378: 'NESBRU',\n    1379: 'NESBRU',\n    1380: 'HEGGEDAL',\n    1381: 'VETTRE',\n    1388: 'BORGEN',\n    1389: 'HEGGEDAL',\n    1390: 'VOLLEN',\n    1391: 'VOLLEN',\n    1392: 'VETTRE',\n    1393: 'VOLLEN',\n    1394: 'NESBRU',\n    1395: 'HVALSTAD',\n    1396: 'BILLINGSTAD',\n    1397: 'NES�YA',\n    1399: 'ASKER',\n    1400: 'SKI',\n    1401: 'SKI',\n    1402: 'SKI',\n    1403: 'LANGHUS',\n    1404: 'SIGGERUD',\n    1405: 'LANGHUS',\n    1406: 'SKI',\n    1407: 'VINTERBRO',\n    1408: 'KR�KSTAD',\n    1409: 'SKOTBU',\n    1410: 'KOLBOTN',\n    1411: 'KOLBOTN',\n    1412: 'SOFIEMYR',\n    1413: 'T�RN�SEN',\n    1414: 'TROLL�SEN',\n    1415: 'OPPEG�RD',\n    1416: 'OPPEG�RD',\n    1417: 'SOFIEMYR',\n    1418: 'KOLBOTN',\n    1419: 'OPPEG�RD',\n    1420: 'SVARTSKOG',\n    1421: 'TROLL�SEN',\n    1422: 'SIGGERUD',\n    1423: 'SKI',\n    1424: 'SKI',\n    1425: 'SKI',\n    1429: 'VINTERBRO',\n    1453: 'BJ�RNEMYR',\n    1454: 'FAGERSTRAND',\n    1455: 'NORDRE FROGN',\n    1456: 'NESODDTANGEN',\n    1457: 'FAGERSTRAND',\n    1458: 'FJELLSTRAND',\n    1459: 'NESODDEN',\n    1461: 'L�RENSKOG',\n    1468: 'FINSTADJORDET',\n    1469: 'RASTA',\n    1470: 'L�RENSKOG',\n    1471: 'L�RENSKOG',\n    1472: 'FJELLHAMAR',\n    1473: 'L�RENSKOG',\n    1474: 'L�RENSKOG',\n    1475: 'FINSTADJORDET',\n    1476: 'RASTA',\n    1477: 'FJELLHAMAR',\n    1478: 'L�RENSKOG',\n    1479: 'KURLAND',\n    1480: 'SLATTUM',\n    1481: 'HAGAN',\n    1482: 'NITTEDAL',\n    1483: 'HAGAN',\n    1484: 'HAKADAL',\n    1485: 'HAKADAL',\n    1486: 'NITTEDAL',\n    1487: 'HAKADAL',\n    1488: 'HAKADAL',\n    1545: 'HVITSTEN',\n    1550: 'H�LEN',\n    1555: 'SON',\n    1556: 'SON',\n    1560: 'LARKOLLEN',\n    1561: 'LARKOLLEN',\n    1570: 'DILLING',\n    1591: 'SPERREBOTN',\n    1592: 'V�LER I �STFOLD',\n    1593: 'SVINNDAL',\n    1594: 'V�LER I �STFOLD',\n    1625: 'MANSTAD',\n    1626: 'MANSTAD',\n    1628: 'ENGELSVIKEN',\n    1640: 'R�DE',\n    1641: 'R�DE',\n    1642: 'SALTNES',\n    1643: 'R�DE',\n    1680: 'SKJ�RHALDEN',\n    1682: 'SKJ�RHALDEN',\n    1683: 'VESTER�Y',\n    1684: 'VESTER�Y',\n    1690: 'HERF�L',\n    1692: 'NEDG�RDEN',\n    1715: 'YVEN',\n    1730: 'ISE',\n    1733: 'HAFSLUNDS�Y',\n    1734: 'HAFSLUNDS�Y',\n    1735: 'VARTEIG',\n    1742: 'KLAVESTADHAUGEN',\n    1743: 'KLAVESTADHAUGEN',\n    1789: 'BERG I �STFOLD',\n    1794: 'SPONVIKA',\n    1796: 'KORNSJ�',\n    1798: 'AREMARK',\n    1799: 'AREMARK',\n    1804: 'SPYDEBERG',\n    1805: 'TOMTER',\n    1806: 'SKIPTVET',\n    1816: 'SKIPTVET',\n    1820: 'SPYDEBERG',\n    1821: 'SPYDEBERG',\n    1823: 'KNAPSTAD',\n    1825: 'TOMTER',\n    1827: 'HOB�L',\n    1828: 'HOB�L',\n    1859: 'SLITU',\n    1860: 'TR�GSTAD',\n    1861: 'TR�GSTAD',\n    1866: 'B�STAD',\n    1867: 'B�STAD',\n    1870: '�RJE',\n    1871: '�RJE',\n    1875: 'OTTEID',\n    1878: 'H�RLAND',\n    1880: 'EIDSBERG',\n    1890: 'RAKKESTAD',\n    1891: 'RAKKESTAD',\n    1892: 'DEGERNES',\n    1893: 'DEGERNES',\n    1894: 'RAKKESTAD',\n    1900: 'FETSUND',\n    1901: 'FETSUND',\n    1903: 'GAN',\n    1910: 'ENEBAKKNESET',\n    1911: 'FLATEBY',\n    1912: 'ENEBAKK',\n    1914: 'YTRE ENEBAKK',\n    1916: 'FLATEBY',\n    1917: 'YTRE ENEBAKK',\n    1920: 'S�RUMSAND',\n    1921: 'S�RUMSAND',\n    1923: 'S�RUM',\n    1924: 'S�RUM',\n    1925: 'BLAKER',\n    1926: 'BLAKER',\n    1927: 'R�N�SFOSS',\n    1928: 'AULI',\n    1929: 'AULI',\n    1930: 'AURSKOG',\n    1931: 'AURSKOG',\n    1940: 'BJ�RKELANGEN',\n    1941: 'BJ�RKELANGEN',\n    1950: 'R�MSKOG',\n    1954: 'SETSKOG',\n    1960: 'L�KEN',\n    1961: 'L�KEN',\n    1963: 'FOSSER',\n    1970: 'HEMNES',\n    1971: 'HEMNES',\n    2005: 'R�LINGEN',\n    2006: 'L�VENSTAD',\n    2007: 'KJELLER',\n    2008: 'FJERDINGBY',\n    2009: 'NORDBY',\n    2010: 'STR�MMEN',\n    2011: 'STR�MMEN',\n    2012: 'LILLESTR�M',\n    2013: 'SKJETTEN',\n    2014: 'BLYSTADLIA',\n    2015: 'LEIRSUND',\n    2016: 'FROGNER',\n    2017: 'FROGNER',\n    2018: 'L�VENSTAD',\n    2022: 'GJERDRUM',\n    2023: 'SKEDSMOKORSET',\n    2024: 'GJERDRUM',\n    2025: 'FJERDINGBY',\n    2026: 'SKJETTEN',\n    2027: 'KJELLER',\n    2028: 'LILLESTR�M',\n    2029: 'R�LINGEN',\n    2030: 'NANNESTAD',\n    2031: 'NANNESTAD',\n    2032: 'MAURA',\n    2033: '�SGREINA',\n    2034: 'HOLTER',\n    2035: 'HOLTER',\n    2036: 'MAURA',\n    2040: 'KL�FTA',\n    2041: 'KL�FTA',\n    2054: 'MOGREINA',\n    2055: 'NORDKISA',\n    2056: 'ALGARHEIM',\n    2057: 'JESSHEIM',\n    2058: 'SESSVOLLMOEN',\n    2060: 'GARDERMOEN',\n    2061: 'GARDERMOEN',\n    2070: 'R�HOLT',\n    2071: 'R�HOLT',\n    2072: 'DAL',\n    2073: 'B�N',\n    2074: 'EIDSVOLL VERK',\n    2076: 'DAL',\n    2080: 'EIDSVOLL',\n    2081: 'EIDSVOLL',\n    2090: 'HURDAL',\n    2091: 'HURDAL',\n    2092: 'MINNESUND',\n    2093: 'FEIRING',\n    2094: 'MINNESUND',\n    2100: 'SKARNES',\n    2101: 'SKARNES',\n    2110: 'SL�STAD',\n    2114: 'DISEN�',\n    2116: 'SANDER',\n    2120: 'SAGSTUA',\n    2121: 'SAGSTUA',\n    2123: 'BRUVOLL',\n    2130: 'KNAPPER',\n    2132: 'GARDVIK',\n    2133: 'GARDVIK',\n    2134: 'AUSTVATN',\n    2150: '�RNES',\n    2151: '�RNES',\n    2160: 'VORMSUND',\n    2161: 'VORMSUND',\n    2162: 'BR�RUD',\n    2163: 'SKOGBYGDA',\n    2164: 'SKOGBYGDA',\n    2165: 'HVAM',\n    2166: 'OPPAKER',\n    2167: 'HVAM',\n    2170: 'FENSTAD',\n    2210: 'GRANLI',\n    2215: 'ROVERUD',\n    2216: 'ROVERUD',\n    2217: 'HOKK�SEN',\n    2218: 'LUNDERS�TER',\n    2219: 'BRANDVAL',\n    2220: '�BOGEN',\n    2223: 'GALTERUD',\n    2224: 'AUSTMARKA',\n    2225: 'KONGSVINGER',\n    2226: 'KONGSVINGER',\n    2227: 'AUSTMARKA',\n    2230: 'SKOTTERUD',\n    2231: 'SKOTTERUD',\n    2232: 'TOB�L',\n    2233: 'VESTMARKA',\n    2235: 'MATRAND',\n    2240: 'MAGNOR',\n    2241: 'MAGNOR',\n    2251: 'GRUE FINNSKOG',\n    2256: 'GRUE FINNSKOG',\n    2260: 'KIRKEN�R',\n    2261: 'KIRKEN�R',\n    2264: 'GRINDER',\n    2265: 'NAMN�',\n    2266: 'ARNEBERG',\n    2270: 'FLISA',\n    2271: 'FLISA',\n    2280: 'GJES�SEN',\n    2283: '�SNES FINNSKOG',\n    2320: 'FURNES',\n    2321: 'HAMAR',\n    2322: 'RIDABU',\n    2323: 'INGEBERG',\n    2324: 'VANG P� HEDMARKEN',\n    2325: 'HAMAR',\n    2326: 'HAMAR',\n    2327: 'FURNES',\n    2328: 'RIDABU',\n    2329: 'VANG P� HEDMARKEN',\n    2330: 'VALLSET',\n    2331: 'VALLSET',\n    2332: '�SVANG',\n    2333: 'ROMEDAL',\n    2334: 'ROMEDAL',\n    2335: 'STANGE',\n    2336: 'STANGE',\n    2337: 'TANGEN',\n    2338: 'ESPA',\n    2339: 'TANGEN',\n    2340: 'L�TEN',\n    2341: 'L�TEN',\n    2344: 'ILSENG',\n    2345: '�DALSBRUK',\n    2346: 'ILSENG',\n    2353: 'STAVSJ�',\n    2355: 'GAUPEN',\n    2360: 'RUDSH�GDA',\n    2361: 'RUDSH�GDA',\n    2364: 'N�ROSET',\n    2365: '�SMARKA',\n    2372: 'BR�TTUM',\n    2373: 'BR�TTUM',\n    2390: 'MOELV',\n    2391: 'MOELV',\n    2410: 'HERNES',\n    2411: 'ELVERUM',\n    2412: 'S�RSKOGBYGDA',\n    2413: 'ELVERUM',\n    2414: 'ELVERUM',\n    2415: 'HERADSBYGD',\n    2416: 'J�MNA',\n    2420: 'TRYSIL',\n    2421: 'TRYSIL',\n    2422: 'NYBERGSUND',\n    2423: '�STBY',\n    2424: '�STBY',\n    2425: 'LJ�RDALEN',\n    2426: 'LJ�RDALEN',\n    2427: 'PLASSEN',\n    2428: 'S�RE OSEN',\n    2429: 'T�RBERGET',\n    2430: 'JORDET',\n    2432: 'SLETT�S',\n    2434: 'BRASKEREIDFOSS',\n    2435: 'BRASKEREIDFOSS',\n    2436: 'V�LER I SOL�R',\n    2437: 'HASLEMOEN',\n    2438: 'GRAVBERGET',\n    2439: 'V�LER I SOL�R',\n    2440: 'ENGERDAL',\n    2441: 'ENGERDAL',\n    2442: 'HERADSBYGD',\n    2443: 'DREVSJ�',\n    2444: 'DREVSJ�',\n    2446: 'ELG�',\n    2447: 'S�RE OSEN',\n    2448: 'S�M�DALEN',\n    2450: 'RENA',\n    2451: 'RENA',\n    2460: 'OSEN',\n    2461: 'OSEN',\n    2476: 'ATNA',\n    2477: 'SOLLIA',\n    2478: 'HANESTAD',\n    2480: 'KOPPANG',\n    2481: 'KOPPANG',\n    2500: 'TYNSET',\n    2501: 'TYNSET',\n    2510: 'TYLLDALEN',\n    2512: 'KVIKNE',\n    2513: 'KVIKNE',\n    2540: 'TOLGA',\n    2541: 'TOLGA',\n    2542: 'VINGELEN',\n    2544: '�VERSJ�DALEN',\n    2550: 'OS I �STERDALEN',\n    2551: 'OS I �STERDALEN',\n    2552: 'DALSBYGDA',\n    2555: 'TUFSINGDALEN',\n    2560: 'ALVDAL',\n    2561: 'ALVDAL',\n    2580: 'FOLLDAL',\n    2581: 'FOLLDAL',\n    2582: 'GRIMSBU',\n    2584: 'DALHOLEN',\n    2607: 'VINGROM',\n    2608: 'LILLEHAMMER',\n    2609: 'LILLEHAMMER',\n    2610: 'MESNALI',\n    2611: 'LILLEHAMMER',\n    2612: 'SJUSJ�EN',\n    2616: 'LISMARKA',\n    2620: 'MESNALI',\n    2621: 'VINGROM',\n    2625: 'F�BERG',\n    2626: 'LILLEHAMMER',\n    2627: 'F�BERG',\n    2628: 'SJUSJ�EN',\n    2629: 'LILLEHAMMER',\n    2630: 'RINGEBU',\n    2631: 'RINGEBU',\n    2632: 'VENABYGD',\n    2633: 'F�VANG',\n    2634: 'F�VANG',\n    2635: 'TRETTEN',\n    2636: '�YER',\n    2637: '�YER',\n    2638: 'TRETTEN',\n    2639: 'VINSTRA',\n    2640: 'VINSTRA',\n    2641: 'KVAM',\n    2642: 'KVAM',\n    2643: 'SK�BU',\n    2644: 'SK�BU',\n    2645: 'S�R-FRON',\n    2646: 'G�L�',\n    2647: 'S�R-FRON',\n    2648: 'S�R-FRON',\n    2649: '�STRE GAUSDAL',\n    2651: '�STRE GAUSDAL',\n    2652: 'SVINGVOLL',\n    2653: 'VESTRE GAUSDAL',\n    2654: 'VESTRE GAUSDAL',\n    2656: 'FOLLEBU',\n    2657: 'SVATSUM',\n    2658: 'ESPEDALEN',\n    2659: 'DOMB�S',\n    2660: 'DOMB�S',\n    2661: 'HJERKINN',\n    2662: 'DOVRE',\n    2663: 'DOVRESKOGEN',\n    2664: 'DOVRE',\n    2665: 'LESJA',\n    2666: 'LORA',\n    2667: 'LESJAVERK',\n    2668: 'LESJASKOG',\n    2669: 'BJORLI',\n    2670: 'OTTA',\n    2671: 'LESJA',\n    2672: 'SEL',\n    2673: 'H�VRINGEN',\n    2674: 'MYSUS�TER',\n    2675: 'OTTA',\n    2676: 'HEIDAL',\n    2677: 'NEDRE HEIDAL',\n    2678: 'SEL',\n    2679: 'HEIDAL',\n    2680: 'V�G�',\n    2681: 'LALM',\n    2682: 'LALM',\n    2683: 'TESSANDEN',\n    2684: 'V�G�',\n    2685: 'GARMO',\n    2686: 'LOM',\n    2687: 'B�VERDALEN',\n    2688: 'LOM',\n    2690: 'SKJ�K',\n    2693: 'NORDBERG',\n    2694: 'SKJ�K',\n    2695: 'GROTLI',\n    2711: 'GRAN',\n    2712: 'BRANDBU',\n    2713: 'ROA',\n    2714: 'JAREN',\n    2715: 'LUNNER',\n    2716: 'HARESTUA',\n    2717: 'GRUA',\n    2718: 'BRANDBU',\n    2720: 'GRINDVOLL',\n    2730: 'LUNNER',\n    2740: 'ROA',\n    2742: 'GRUA',\n    2743: 'HARESTUA',\n    2750: 'GRAN',\n    2760: 'BRANDBU',\n    2770: 'JAREN',\n    2807: 'HUNNDALEN',\n    2811: 'HUNNDALEN',\n    2820: 'NORDRE TOTEN',\n    2821: 'GJ�VIK',\n    2822: 'BYBRUA',\n    2825: 'GJ�VIK',\n    2827: 'HUNNDALEN',\n    2830: 'RAUFOSS',\n    2831: 'RAUFOSS',\n    2832: 'BIRI',\n    2836: 'BIRI',\n    2837: 'BIRISTRAND',\n    2838: 'SNERTINGDAL',\n    2839: '�VRE SNERTINGDAL',\n    2840: 'REINSVOLL',\n    2841: 'SNERTINGDAL',\n    2843: 'EINA',\n    2844: 'KOLBU',\n    2845: 'B�VERBRU',\n    2846: 'B�VERBRU',\n    2847: 'KOLBU',\n    2848: 'SKREIA',\n    2849: 'KAPP',\n    2850: 'LENA',\n    2851: 'LENA',\n    2853: 'REINSVOLL',\n    2854: 'EINA',\n    2857: 'SKREIA',\n    2858: 'KAPP',\n    2860: 'HOV',\n    2861: 'LAND�SBYGDA',\n    2862: 'FLUBERG',\n    2863: 'VESTSIDA',\n    2864: 'FALL',\n    2866: 'ENGER',\n    2867: 'HOV',\n    2870: 'DOKKA',\n    2879: 'ODNES',\n    2880: 'NORD-TORPA',\n    2881: 'AUST-TORPA',\n    2882: 'DOKKA',\n    2890: 'ETNEDAL',\n    2893: 'ETNEDAL',\n    2900: 'FAGERNES',\n    2901: 'FAGERNES',\n    2907: 'LEIRA I VALDRES',\n    2909: 'AURDAL',\n    2910: 'AURDAL',\n    2917: 'SKRAUTV�L',\n    2918: 'ULNES',\n    2920: 'LEIRA I VALDRES',\n    2923: 'TISLEIDALEN',\n    2929: 'BAGN',\n    2930: 'BAGN',\n    2933: 'REINLI',\n    2936: 'BEGNADALEN',\n    2937: 'BEGNA',\n    2939: 'HEGGENES',\n    2940: 'HEGGENES',\n    2943: 'ROGNE',\n    2950: 'SKAMMESTEIN',\n    2952: 'BEITO',\n    2953: 'BEITOST�LEN',\n    2954: 'BEITOST�LEN',\n    2959: 'R�N',\n    2960: 'R�N',\n    2965: 'SLIDRE',\n    2966: 'SLIDRE',\n    2967: 'LOMEN',\n    2972: 'RYFOSS',\n    2973: 'RYFOSS',\n    2974: 'VANG I VALDRES',\n    2975: 'VANG I VALDRES',\n    2977: '�YE',\n    2985: 'TYINKRYSSET',\n    3050: 'MJ�NDALEN',\n    3051: 'MJ�NDALEN',\n    3053: 'STEINBERG',\n    3054: 'KROKSTADELVA',\n    3055: 'KROKSTADELVA',\n    3056: 'SOLBERGELVA',\n    3057: 'SOLBERGELVA',\n    3058: 'SOLBERGMOEN',\n    3060: 'SVELVIK',\n    3061: 'SVELVIK',\n    3075: 'BERGER',\n    3090: 'HOF',\n    3091: 'HOF',\n    3092: 'SUNDBYFOSS',\n    3095: 'EIDSFOSS',\n    3106: 'N�TTER�Y',\n    3107: 'SEM',\n    3108: 'VEAR',\n    3120: 'N�TTER�Y',\n    3121: 'N�TTER�Y',\n    3128: 'N�TTER�Y',\n    3129: 'T�NSBERG',\n    3131: 'HUS�YSUND',\n    3132: 'HUS�YSUND',\n    3133: 'DUKEN',\n    3134: 'T�NSBERG',\n    3135: 'TOR�D',\n    3137: 'TOR�D',\n    3138: 'SKALLESTAD',\n    3139: 'SKALLESTAD',\n    3140: 'N�TTER�Y',\n    3141: 'KJ�PMANNSKJ�R',\n    3142: 'VESTSKOGEN',\n    3143: 'KJ�PMANNSKJ�R',\n    3144: 'VEIERLAND',\n    3145: 'TJ�ME',\n    3148: 'HVASSER',\n    3156: 'MELSOMVIK',\n    3157: 'BARK�KER',\n    3158: 'ANDEBU',\n    3159: 'MELSOMVIK',\n    3160: 'STOKKE',\n    3161: 'STOKKE',\n    3162: 'ANDEBU',\n    3163: 'N�TTER�Y',\n    3164: 'REVETAL',\n    3165: 'TJ�ME',\n    3166: 'TOLVSR�D',\n    3167: '�SG�RDSTRAND',\n    3168: 'MELSOMVIK',\n    3169: 'STOKKE',\n    3170: 'SEM',\n    3171: 'SEM',\n    3172: 'VEAR',\n    3173: 'VEAR',\n    3174: 'REVETAL',\n    3175: 'RAMNES',\n    3176: 'UNDRUMSDAL',\n    3177: 'V�LE',\n    3178: 'V�LE',\n    3179: '�SG�RDSTRAND',\n    3180: 'NYKIRKE',\n    3184: 'BORRE',\n    3185: 'SKOPPUM',\n    3195: 'SKOPPUM',\n    3196: 'HORTEN',\n    3197: 'NYKIRKE',\n    3199: 'BORRE',\n    3243: 'KODAL',\n    3244: 'SANDEFJORD',\n    3245: 'KODAL',\n    3275: 'SVARSTAD',\n    3276: 'SVARSTAD',\n    3277: 'STEINSHOLT',\n    3280: 'TJODALYNG',\n    3281: 'TJODALYNG',\n    3282: 'KVELDE',\n    3284: 'KVELDE',\n    3285: 'LARVIK',\n    3295: 'HELGEROA',\n    3296: 'NEVLUNGHAVN',\n    3297: 'HELGEROA',\n    3320: 'VESTFOSSEN',\n    3321: 'VESTFOSSEN',\n    3322: 'FISKUM',\n    3330: 'SKOTSELV',\n    3331: 'SKOTSELV',\n    3350: 'PRESTFOSS',\n    3351: 'PRESTFOSS',\n    3355: 'SOLUMSMOEN',\n    3357: 'EGGEDAL',\n    3358: 'NEDRE EGGEDAL',\n    3359: 'EGGEDAL',\n    3360: 'GEITHUS',\n    3361: 'GEITHUS',\n    3370: 'VIKERSUND',\n    3371: 'VIKERSUND',\n    3410: 'SYLLING',\n    3411: 'SYLLING',\n    3412: 'LIERSTRANDA',\n    3413: 'LIER',\n    3414: 'LIERSTRANDA',\n    3420: 'LIERSKOGEN',\n    3421: 'LIERSKOGEN',\n    3425: 'REISTAD',\n    3430: 'SPIKKESTAD',\n    3431: 'SPIKKESTAD',\n    3440: 'R�YKEN',\n    3441: 'R�YKEN',\n    3442: 'HYGGEN',\n    3470: 'SLEMMESTAD',\n    3471: 'SLEMMESTAD',\n    3472: 'B�DALEN',\n    3474: '�ROS',\n    3475: 'S�TRE',\n    3476: 'S�TRE',\n    3477: 'B�TST�',\n    3478: 'N�RSNES',\n    3479: 'N�RSNES',\n    3480: 'FILTVET',\n    3481: 'TOFTE',\n    3482: 'TOFTE',\n    3483: 'KANA',\n    3484: 'HOLMSBU',\n    3485: 'FILTVET',\n    3490: 'KLOKKARSTUA',\n    3520: 'JEVNAKER',\n    3521: 'JEVNAKER',\n    3522: 'BJONEROA',\n    3523: 'NES I �DAL',\n    3524: 'NES I �DAL',\n    3525: 'HALLINGBY',\n    3526: 'HALLINGBY',\n    3527: 'BJONEROA',\n    3528: 'HEDALEN',\n    3529: 'R�YSE',\n    3530: 'R�YSE',\n    3531: 'KROKKLEIVA',\n    3532: 'TYRISTRAND',\n    3533: 'TYRISTRAND',\n    3534: 'SOKNA',\n    3535: 'KR�DEREN',\n    3536: 'NORESUND',\n    3537: 'KR�DEREN',\n    3538: 'SOLLIH�GDA',\n    3539: 'FL�',\n    3540: 'NESBYEN',\n    3541: 'NESBYEN',\n    3543: 'NORESUND',\n    3544: 'TUNHOVD',\n    3545: 'FL�',\n    3550: 'GOL',\n    3551: 'GOL',\n    3560: 'HEMSEDAL',\n    3561: 'HEMSEDAL',\n    3570: '�L',\n    3571: '�L',\n    3575: 'HOL',\n    3576: 'HOL',\n    3577: 'HOVET',\n    3579: 'TORPO',\n    3580: 'GEILO',\n    3581: 'GEILO',\n    3588: 'DAGALI',\n    3593: 'USTAOSET',\n    3595: 'HAUGAST�L',\n    3608: 'HEISTADMOEN',\n    3618: 'SKOLLENBORG',\n    3619: 'SKOLLENBORG',\n    3620: 'FLESBERG',\n    3621: 'LAMPELAND',\n    3622: 'SVENE',\n    3623: 'LAMPELAND',\n    3624: 'LYNGDAL I NUMEDAL',\n    3625: 'SKOLLENBORG',\n    3626: 'ROLLAG',\n    3627: 'VEGGLI',\n    3628: 'VEGGLI',\n    3629: 'NORE',\n    3630: 'R�DBERG',\n    3631: 'R�DBERG',\n    3632: 'UVDAL',\n    3634: 'NORE',\n    3646: 'HVITTINGFOSS',\n    3647: 'HVITTINGFOSS',\n    3648: 'PASSEBEKK',\n    3650: 'TINN AUSTBYGD',\n    3652: 'HOVIN I TELEMARK',\n    3656: 'ATR�',\n    3658: 'MILAND',\n    3660: 'RJUKAN',\n    3661: 'RJUKAN',\n    3665: 'SAULAND',\n    3666: 'ATR�',\n    3690: 'HJARTDAL',\n    3691: 'GRANSHERAD',\n    3692: 'SAULAND',\n    3697: 'TUDDAL',\n    3748: 'SILJAN',\n    3749: 'SILJAN',\n    3750: 'DRANGEDAL',\n    3753: 'T�RDAL',\n    3760: 'NESLANDSVATN',\n    3766: 'SANNIDAL',\n    3770: 'KRAGER�',\n    3772: 'KRAGER�',\n    3780: 'SK�T�Y',\n    3781: 'JOMFRULAND',\n    3783: 'KRAGER� SKJ�RG�RD',\n    3785: 'SKIEN',\n    3787: 'SKIEN',\n    3788: 'STABBESTAD',\n    3789: 'KRAGER�',\n    3790: 'HELLE',\n    3791: 'KRAGER�',\n    3792: 'SKIEN',\n    3793: 'SANNIDAL',\n    3794: 'HELLE',\n    3795: 'DRANGEDAL',\n    3810: 'GVARV',\n    3811: 'H�RTE',\n    3812: 'AKKERHAUGEN',\n    3820: 'NORDAGUTU',\n    3825: 'LUNDE',\n    3830: 'ULEFOSS',\n    3831: 'ULEFOSS',\n    3832: 'LUNDE',\n    3833: 'B� I TELEMARK',\n    3834: 'GVARV',\n    3835: 'SELJORD',\n    3836: 'KVITESEID',\n    3840: 'SELJORD',\n    3841: 'FLATDAL',\n    3844: '�MOTSDAL',\n    3848: 'MORGEDAL',\n    3849: 'VR�LIOSEN',\n    3850: 'KVITESEID',\n    3852: 'VR�DAL',\n    3853: 'VR�DAL',\n    3854: 'NISSEDAL',\n    3855: 'TREUNGEN',\n    3864: 'RAULAND',\n    3870: 'FYRESDAL',\n    3880: 'DALEN',\n    3882: '�MDALS VERK',\n    3883: 'TREUNGEN',\n    3884: 'RAULAND',\n    3885: 'FYRESDAL',\n    3886: 'DALEN',\n    3887: 'VINJE',\n    3888: 'EDLAND',\n    3890: 'VINJE',\n    3891: 'H�YDALSMO',\n    3893: 'VINJESVINGEN',\n    3895: 'EDLAND',\n    3947: 'LANGANGEN',\n    3948: 'PORSGRUNN',\n    3949: 'PORSGRUNN',\n    3950: 'BREVIK',\n    3965: 'HERRE',\n    3966: 'STATHELLE',\n    3967: 'STATHELLE',\n    3970: 'LANGESUND',\n    3991: 'BREVIK',\n    3993: 'LANGESUND',\n    3994: 'LANGESUND',\n    3995: 'STATHELLE',\n    3999: 'HERRE',\n    4050: 'SOLA',\n    4051: 'SOLA',\n    4052: 'R�YNEBERG',\n    4053: 'R�GE',\n    4054: 'TJELTA',\n    4055: 'SOLA',\n    4059: 'R�YNEBERG',\n    4063: 'TJELTA',\n    4068: 'STAVANGER',\n    4076: 'VASS�Y',\n    4077: 'HUNDV�G',\n    4083: 'HUNDV�G',\n    4084: 'STAVANGER',\n    4085: 'HUNDV�G',\n    4086: 'HUNDV�G',\n    4087: 'STAVANGER',\n    4088: 'STAVANGER',\n    4096: 'RANDABERG',\n    4097: 'SOLA',\n    4098: 'TANANGER',\n    4099: 'STAVANGER',\n    4100: 'J�RPELAND',\n    4102: 'IDSE',\n    4110: 'FORSAND',\n    4119: 'FORSAND',\n    4120: 'TAU',\n    4121: 'TAU',\n    4123: 'S�R-HIDLE',\n    4124: 'TAU',\n    4126: 'J�RPELAND',\n    4127: 'LYSEBOTN',\n    4128: 'FL�YRLI',\n    4129: 'SONGESAND',\n    4130: 'HJELMELAND',\n    4134: 'J�SENFJORDEN',\n    4137: '�RDAL I RYFYLKE',\n    4139: 'FISTER',\n    4146: 'SKIFTUN',\n    4148: 'HJELMELAND',\n    4150: 'RENNES�Y',\n    4152: 'VESTRE �M�Y',\n    4153: 'BRIMSE',\n    4154: 'AUSTRE �M�Y',\n    4156: 'MOSTER�Y',\n    4158: 'BRU',\n    4159: 'RENNES�Y',\n    4160: 'FINN�Y',\n    4161: 'FINN�Y',\n    4163: 'TALGJE',\n    4164: 'FOGN',\n    4167: 'HELG�Y I RYFYLKE',\n    4168: 'BYRE',\n    4169: 'S�RBOKN',\n    4170: 'SJERNAR�Y',\n    4173: 'NORD-HIDLE',\n    4174: 'SJERNAR�Y',\n    4180: 'KVITS�Y',\n    4181: 'KVITS�Y',\n    4182: 'SKARTVEIT',\n    4187: 'OMBO',\n    4198: 'FOLD�Y',\n    4200: 'SAUDA',\n    4201: 'SAUDA',\n    4208: 'SAUDASJ�EN',\n    4209: 'VANVIK',\n    4230: 'SAND',\n    4233: 'ERFJORD',\n    4234: 'JELSA',\n    4235: 'HEBNES',\n    4237: 'SULDALSOSEN',\n    4239: 'SAND',\n    4240: 'SULDALSOSEN',\n    4244: 'NESFLATEN',\n    4250: 'KOPERVIK',\n    4260: 'TORVASTAD',\n    4262: 'AVALDSNES',\n    4264: 'KVALAV�G',\n    4265: 'H�VIK',\n    4270: '�KREHAMN',\n    4272: 'SANDVE',\n    4274: 'STOL',\n    4275: 'S�VELANDSVIK',\n    4276: 'VEAV�GEN',\n    4280: 'SKUDENESHAVN',\n    4291: 'KOPERVIK',\n    4294: 'KOPERVIK',\n    4295: 'VEAV�GEN',\n    4296: '�KREHAMN',\n    4297: 'SKUDENESHAVN',\n    4298: 'TORVASTAD',\n    4299: 'AVALDSNES',\n    4310: 'HOMMERS�K',\n    4311: 'HOMMERS�K',\n    4330: '�LG�RD',\n    4331: '�LG�RD',\n    4332: 'FIGGJO',\n    4333: 'OLTEDAL',\n    4334: '�LG�RD',\n    4335: 'DIRDAL',\n    4339: '�LG�RD',\n    4340: 'BRYNE',\n    4341: 'BRYNE',\n    4342: 'UNDHEIM',\n    4343: 'ORRE',\n    4347: 'LYE',\n    4348: 'LYE',\n    4349: 'BRYNE',\n    4353: 'KLEPP STASJON',\n    4354: 'VOLL',\n    4355: 'KVERNALAND',\n    4356: 'KVERNALAND',\n    4357: 'KLEPP STASJON',\n    4358: 'KLEPPE',\n    4360: 'VARHAUG',\n    4361: 'SIREV�G',\n    4362: 'VIGRESTAD',\n    4363: 'BRUSAND',\n    4364: 'SIREV�G',\n    4365: 'N�RB�',\n    4367: 'N�RB�',\n    4368: 'VARHAUG',\n    4369: 'VIGRESTAD',\n    4375: 'HELLVIK',\n    4376: 'HELLELAND',\n    4378: 'EGERSUND',\n    4379: 'EGERSUND',\n    4380: 'HAUGE I DALANE',\n    4381: 'HAUGE I DALANE',\n    4384: 'VIKES�',\n    4385: 'HELLELAND',\n    4387: 'BJERKREIM',\n    4389: 'VIKES�',\n    4390: 'OLTEDAL',\n    4395: 'HOMMERS�K',\n    4420: '�NA-SIRA',\n    4432: 'HIDRASUND',\n    4434: 'ANDABEL�Y',\n    4436: 'GYLAND',\n    4438: 'SIRA',\n    4439: 'SIRA',\n    4440: 'TONSTAD',\n    4441: 'TONSTAD',\n    4443: 'TJ�RHOM',\n    4460: 'MOI',\n    4462: 'HOVSHERAD',\n    4463: 'UALAND',\n    4465: 'MOI',\n    4473: 'KVINLOG',\n    4480: 'KVINESDAL',\n    4484: '�YESTRANDA',\n    4485: 'FEDA',\n    4519: 'HOLUM',\n    4525: 'KONSMO',\n    4526: 'KONSMO',\n    4528: 'KOLLUNGTVEIT',\n    4529: 'BYREMO',\n    4532: '�YSLEB�',\n    4534: 'MARNARDAL',\n    4535: 'MARNARDAL',\n    4536: 'BJELLAND',\n    4540: '�SERAL',\n    4541: '�SERAL',\n    4544: 'FOSSDAL',\n    4563: 'BORHAUG',\n    4586: 'KORSHAMN',\n    4588: 'KV�S',\n    4590: 'SNARTEMO',\n    4595: 'TINGVATN',\n    4596: 'EIKEN',\n    4597: 'EIKEN',\n    4609: 'KARDEMOMME BY',\n    4619: 'MOSBY',\n    4625: 'FLEKKER�Y',\n    4645: 'NODELAND',\n    4646: 'FINSLAND',\n    4647: 'BRENN�SEN',\n    4649: 'FINSLAND',\n    4656: 'HAMRESANDEN',\n    4657: 'KJEVIK',\n    4658: 'TVEIT',\n    4679: 'FLEKKER�Y',\n    4684: 'BRENN�SEN',\n    4685: 'NODELAND',\n    4699: 'TVEIT',\n    4705: '�VREB�',\n    4715: '�VREB�',\n    4720: 'H�GELAND',\n    4721: 'H�GELAND',\n    4724: 'IVELAND',\n    4725: 'IVELAND',\n    4730: 'VATNESTR�M',\n    4737: 'HORNNES',\n    4741: 'BYGLANDSFJORD',\n    4742: 'GRENDI',\n    4744: 'BYGLAND',\n    4745: 'BYGLAND',\n    4746: 'VALLE',\n    4747: 'VALLE',\n    4748: 'RYSSTAD',\n    4749: 'RYSSTAD',\n    4754: 'BYKLE',\n    4760: 'BIRKELAND',\n    4766: 'HEREFOSS',\n    4768: 'ENGESLAND',\n    4770: 'H�V�G',\n    4780: 'BREKKEST�',\n    4793: 'H�V�G',\n    4794: 'LILLESAND',\n    4795: 'BIRKELAND',\n    4810: 'EYDEHAVN',\n    4812: 'KONGSHAVN',\n    4815: 'SALTR�D',\n    4816: 'KOLBJ�RNSVIK',\n    4817: 'HIS',\n    4818: 'F�RVIK',\n    4820: 'FROLAND',\n    4821: 'RYKENE',\n    4822: 'RYKENE',\n    4823: 'NEDENES',\n    4824: 'BJORBEKK',\n    4825: 'ARENDAL',\n    4827: 'FROLANDS VERK',\n    4828: 'MJ�VATN',\n    4830: 'HYNNEKLEIV',\n    4832: 'MYKLAND',\n    4834: 'RISDAL',\n    4851: 'SALTR�D',\n    4852: 'F�RVIK',\n    4853: 'HIS',\n    4854: 'NEDENES',\n    4855: 'FROLAND',\n    4862: 'EYDEHAVN',\n    4863: 'NELAUG',\n    4864: '�MLI',\n    4865: '�MLI',\n    4868: 'SEL�SVATN',\n    4869: 'D�LEMO',\n    4870: 'FEVIK',\n    4888: 'HOMBORSUND',\n    4889: 'FEVIK',\n    4909: 'SONGE',\n    4910: 'LYNG�R',\n    4912: 'GJEVING',\n    4915: 'VESTRE SAND�YA',\n    4916: 'BOR�Y',\n    4920: 'STAUB�',\n    4921: 'STAUB�',\n    4934: 'NES VERK',\n    4971: 'SUNDEBRU',\n    4972: 'GJERSTAD',\n    4973: 'VEG�RSHEI',\n    4974: 'S�NDELED',\n    4980: 'GJERSTAD',\n    4985: 'VEG�RSHEI',\n    4990: 'S�NDELED',\n    4993: 'SUNDEBRU',\n    4994: 'AKLAND',\n    5101: 'EIDSV�GNESET',\n    5104: 'EIDSV�G I �SANE',\n    5105: 'EIDSV�G I �SANE',\n    5106: '�VRE ERVIK',\n    5107: 'SALHUS',\n    5108: 'HORDVIK',\n    5109: 'HYLKJE',\n    5111: 'BREISTEIN',\n    5113: 'TERTNES',\n    5114: 'TERTNES',\n    5122: 'MORVIK',\n    5124: 'MORVIK',\n    5134: 'FLAKTVEIT',\n    5135: 'FLAKTVEIT',\n    5136: 'MJ�LKER�EN',\n    5137: 'MJ�LKER�EN',\n    5151: 'STRAUMSGREND',\n    5170: 'BJ�RNDALSTR�',\n    5174: 'MATHOPEN',\n    5176: 'LODDEFJORD',\n    5177: 'BJ�R�YHAMN',\n    5178: 'LODDEFJORD',\n    5179: 'GODVIK',\n    5183: 'OLSVIK',\n    5184: 'OLSVIK',\n    5207: 'S�FTELAND',\n    5212: 'S�FTELAND',\n    5213: 'LEPS�Y',\n    5214: 'LYSEKLOSTER',\n    5215: 'LYSEKLOSTER',\n    5216: 'LEPS�Y',\n    5217: 'HAGAVIK',\n    5218: 'NORDSTR�NO',\n    5229: 'KALANDSEIDET',\n    5243: 'FANA',\n    5244: 'FANA',\n    5251: 'S�REIDGREND',\n    5252: 'S�REIDGREND',\n    5253: 'SANDSLI',\n    5254: 'SANDSLI',\n    5257: 'KOKSTAD',\n    5258: 'BLOMSTERDALEN',\n    5259: 'HJELLESTAD',\n    5260: 'INDRE ARNA',\n    5261: 'INDRE ARNA',\n    5262: 'ARNATVEIT',\n    5263: 'TRENGEREID',\n    5264: 'GARNES',\n    5265: 'YTRE ARNA',\n    5267: 'ESPELAND',\n    5268: 'HAUKELAND',\n    5281: 'VALESTRANDSFOSSEN',\n    5282: 'LONEV�G',\n    5283: 'FOTLANDSV�G',\n    5284: 'TYSSEBOTNEN',\n    5285: 'BRUVIK',\n    5286: 'HAUS',\n    5291: 'VALESTRANDSFOSSEN',\n    5293: 'LONEV�G',\n    5299: 'HAUS',\n    5300: 'KLEPPEST�',\n    5301: 'KLEPPEST�',\n    5302: 'STRUSSHAMN',\n    5303: 'FOLLESE',\n    5304: 'HETLEVIK',\n    5305: 'FLORV�G',\n    5306: 'ERDAL',\n    5307: 'ASK',\n    5308: 'KLEPPEST�',\n    5309: 'KLEPPEST�',\n    5310: 'HAUGLANDSHELLA',\n    5311: 'KJERRGARDEN',\n    5314: 'KJERRGARDEN',\n    5315: 'HERDLA',\n    5318: 'STRUSSHAMN',\n    5325: 'FOLLESE',\n    5326: 'ASK',\n    5327: 'HAUGLANDSHELLA',\n    5329: 'FLORV�G',\n    5331: 'RONG',\n    5333: 'TJELDST�',\n    5334: 'HELLES�Y',\n    5335: 'HERNAR',\n    5336: 'TJELDST�',\n    5337: 'RONG',\n    5345: 'KNARREVIK',\n    5346: '�GOTNES',\n    5347: '�GOTNES',\n    5350: 'BRATTHOLMEN',\n    5353: 'STRAUME',\n    5354: 'STRAUME',\n    5355: 'KNARREVIK',\n    5357: 'FJELL',\n    5358: 'FJELL',\n    5360: 'KOLLTVEIT',\n    5363: '�GOTNES',\n    5365: 'TUR�Y',\n    5366: 'MISJE',\n    5371: 'SKOGSV�G',\n    5374: 'STEINSLAND',\n    5378: 'KLOKKARVIK',\n    5379: 'STEINSLAND',\n    5380: 'T�LAV�G',\n    5381: 'GLESV�R',\n    5382: 'SKOGSV�G',\n    5384: 'TORANGSV�G',\n    5385: 'BAKKASUND',\n    5387: 'M�KSTER',\n    5388: 'LITLAKALS�Y',\n    5392: 'STOREB�',\n    5393: 'STOREB�',\n    5394: 'KOLBEINSVIK',\n    5396: 'VESTRE VINNESV�G',\n    5397: 'BEKKJARVIK',\n    5398: 'STOLMEN',\n    5399: 'BEKKJARVIK',\n    5408: 'SAGV�G',\n    5409: 'STORD',\n    5410: 'SAGV�G',\n    5411: 'STORD',\n    5412: 'STORD',\n    5413: 'HUGLO',\n    5418: 'FITJAR',\n    5419: 'FITJAR',\n    5420: 'RUBBESTADNESET',\n    5423: 'BRANDASUND',\n    5427: 'URANGSV�G',\n    5428: 'FOLDR�YHAMN',\n    5430: 'BREMNES',\n    5437: 'FINN�S',\n    5440: 'MOSTERHAMN',\n    5443: 'B�MLO',\n    5444: 'ESPEV�R',\n    5445: 'BREMNES',\n    5447: 'MOSTERHAMN',\n    5449: 'B�MLO',\n    5450: 'SUNDE I SUNNHORDLAND',\n    5451: 'VALEN',\n    5452: 'SANDVOLL',\n    5453: 'UT�KER',\n    5454: 'S�B�VIK',\n    5455: 'HALSN�Y KLOSTER',\n    5457: 'H�YLANDSBYGD',\n    5458: 'ARNAVIK',\n    5459: 'FJELBERG',\n    5460: 'HUSNES',\n    5462: 'HER�YSUNDET',\n    5463: 'USKEDALEN',\n    5464: 'DIMMELSVIK',\n    5465: 'USKEDALEN',\n    5470: 'ROSENDAL',\n    5472: 'SEIMSFOSS',\n    5473: 'SNILSTVEIT�Y',\n    5474: 'L�FALLSTRAND',\n    5475: '�NES',\n    5476: 'MAURANGER',\n    5480: 'HUSNES',\n    5484: 'S�B�VIK',\n    5486: 'ROSENDAL',\n    5498: 'MATRE',\n    5499: '�KRA',\n    5508: 'KARMSUND',\n    5541: 'KOLNES',\n    5542: 'KARMSUND',\n    5544: 'VORMEDAL',\n    5545: 'VORMEDAL',\n    5546: 'R�YKSUND',\n    5547: 'UTSIRA',\n    5548: 'FE�Y',\n    5549: 'R�V�R',\n    5550: 'SVEIO',\n    5551: 'AUKLANDSHAMN',\n    5554: 'VALEV�G',\n    5559: 'SVEIO',\n    5560: 'NEDSTRAND',\n    5561: 'BOKN',\n    5562: 'NEDSTRAND',\n    5563: 'F�RRESFJORDEN',\n    5565: 'TYSV�RV�G',\n    5566: 'HERVIK',\n    5567: 'SKJOLDASTRAUMEN',\n    5568: 'VIKEBYGD',\n    5569: 'BOKN',\n    5570: 'AKSDAL',\n    5574: 'SKJOLD',\n    5575: 'AKSDAL',\n    5576: '�VRE VATS',\n    5578: 'NEDRE VATS',\n    5580: '�LEN',\n    5582: '�LENSV�G',\n    5583: 'VIKEDAL',\n    5584: 'BJOA',\n    5585: 'SANDEID',\n    5586: 'VIKEDAL',\n    5588: '�LEN',\n    5589: 'SANDEID',\n    5590: 'ETNE',\n    5591: 'ETNE',\n    5593: 'SK�NEVIK',\n    5594: 'SK�NEVIK',\n    5595: 'F�RRESFJORDEN',\n    5596: 'MARKHUS',\n    5598: 'FJ�RA',\n    5604: '�YSTESE',\n    5605: '�LVIK',\n    5610: '�YSTESE',\n    5612: 'STEINST�',\n    5614: '�LVIK',\n    5620: 'T�RVIKBYGD',\n    5626: 'KYSNESSTRAND',\n    5627: 'JONDAL',\n    5628: 'HERAND',\n    5629: 'JONDAL',\n    5630: 'STRANDEBARM',\n    5631: 'STRANDEBARM',\n    5632: 'OMASTRAND',\n    5633: 'OMASTRAND',\n    5635: 'HATLESTRAND',\n    5636: 'VARALDS�Y',\n    5637: '�LVE',\n    5640: 'EIKELANDSOSEN',\n    5641: 'FUSA',\n    5642: 'HOLMEFJORD',\n    5643: 'STRANDVIK',\n    5644: 'S�VAREID',\n    5645: 'S�VAREID',\n    5646: 'NORDTVEITGREND',\n    5647: 'BALDERSHEIM',\n    5648: 'FUSA',\n    5649: 'EIKELANDSOSEN',\n    5650: 'TYSSE',\n    5651: 'TYSSE',\n    5652: '�RLAND',\n    5653: '�RLAND',\n    5680: 'TYSNES',\n    5683: 'REKSTEREN',\n    5685: 'UGGDAL',\n    5687: 'FLATR�KER',\n    5690: 'LUNDEGREND',\n    5693: '�RBAKKA',\n    5694: 'ONARHEIM',\n    5695: 'UGGDAL',\n    5696: 'TYSNES',\n    5707: 'EVANGER',\n    5708: 'VOSS',\n    5709: 'VOSS',\n    5710: 'SKULESTADMO',\n    5711: 'SKULESTADMO',\n    5712: 'VOSSESTRAND',\n    5713: 'VOSSESTRAND',\n    5714: 'VOSS',\n    5715: 'STALHEIM',\n    5718: 'MYRDAL',\n    5719: 'FINSE',\n    5720: 'STANGHELLE',\n    5721: 'DALEKVAM',\n    5722: 'DALEKVAM',\n    5723: 'BOLSTAD�YRI',\n    5724: 'STANGHELLE',\n    5725: 'VAKSDAL',\n    5726: 'VAKSDAL',\n    5727: 'STAMNES',\n    5728: 'EIDSLANDET',\n    5729: 'MODALEN',\n    5730: 'ULVIK',\n    5731: 'ULVIK',\n    5732: 'MODALEN',\n    5733: 'GRANVIN',\n    5734: 'VALLAVIK',\n    5736: 'GRANVIN',\n    5741: 'AURLAND',\n    5742: 'FL�M',\n    5743: 'FL�M',\n    5745: 'AURLAND',\n    5746: 'UNDREDAL',\n    5747: 'GUDVANGEN',\n    5748: 'STYVI',\n    5749: 'GUDVANGEN',\n    5760: 'R�LDAL',\n    5763: 'SKARE',\n    5770: 'TYSSEDAL',\n    5773: 'HOVLAND',\n    5775: 'N�',\n    5776: 'N�',\n    5777: 'GRIMO',\n    5778: 'UTNE',\n    5779: 'UTNE',\n    5780: 'KINSARVIK',\n    5781: 'LOFTHUS',\n    5782: 'KINSARVIK',\n    5783: 'EIDFJORD',\n    5784: '�VRE EIDFJORD',\n    5785: 'V�RINGSFOSS',\n    5786: 'EIDFJORD',\n    5787: 'LOFTHUS',\n    5788: 'KINSARVIK',\n    5906: 'FREKHAUG',\n    5907: 'ALVERSUND',\n    5908: 'ISDALST�',\n    5911: 'ALVERSUND',\n    5912: 'SEIM',\n    5913: 'EIKANGERV�G',\n    5914: 'ISDALST�',\n    5915: 'HJELM�S',\n    5916: 'ISDALST�',\n    5917: 'ROSSLAND',\n    5918: 'FREKHAUG',\n    5919: 'FREKHAUG',\n    5931: 'MANGER',\n    5935: 'B�V�GEN',\n    5936: 'MANGER',\n    5937: 'B�V�GEN',\n    5938: 'S�B�V�GEN',\n    5939: 'SLETTA',\n    5941: 'AUSTRHEIM',\n    5943: 'AUSTRHEIM',\n    5947: 'FEDJE',\n    5948: 'FEDJE',\n    5951: 'LIND�S',\n    5952: 'FONNES',\n    5953: 'FONNES',\n    5954: 'MONGSTAD',\n    5955: 'LIND�S',\n    5956: 'HUNDVIN',\n    5957: 'MYKING',\n    5960: 'DALS�YRA',\n    5961: 'BREKKE',\n    5962: 'BJORDAL',\n    5963: 'DALS�YRA',\n    5964: 'BREKKE',\n    5965: 'BJORDAL',\n    5966: 'EIVINDVIK',\n    5967: 'EIVINDVIK',\n    5970: 'BYRKNES�Y',\n    5977: '�NNELAND',\n    5978: 'MJ�MNA',\n    5979: 'BYRKNES�Y',\n    5981: 'MASFJORDNES',\n    5982: 'MASFJORDNES',\n    5983: 'HAUGSV�R',\n    5984: 'MATREDAL',\n    5985: 'HAUGSV�R',\n    5986: 'HOSTELAND',\n    5987: 'HOSTELAND',\n    5991: 'OSTEREIDET',\n    5993: 'OSTEREIDET',\n    5994: 'VIKANES',\n    6030: 'LANGEV�G',\n    6034: 'EIDSNES',\n    6035: 'FISKARSTRAND',\n    6036: 'MAUSEIDV�G',\n    6037: 'EIDSNES',\n    6038: 'FISKARSTRAND',\n    6039: 'LANGEV�G',\n    6040: 'VIGRA',\n    6050: 'VALDER�YA',\n    6052: 'GISKE',\n    6054: 'GOD�YA',\n    6055: 'GOD�YA',\n    6057: 'ELLINGS�Y',\n    6058: 'VALDER�YA',\n    6059: 'VIGRA',\n    6060: 'HAREID',\n    6062: 'BRANDAL',\n    6063: 'HJ�RUNGAV�G',\n    6064: 'HADDAL',\n    6065: 'ULSTEINVIK',\n    6067: 'ULSTEINVIK',\n    6068: 'EIKSUND',\n    6069: 'HAREID',\n    6070: 'TJ�RV�G',\n    6075: 'MOLTUSTRANDA',\n    6076: 'MOLTUSTRANDA',\n    6078: 'GJERDSVIKA',\n    6079: 'GURSK�Y',\n    6080: 'GURSK�Y',\n    6082: 'GURSKEN',\n    6083: 'GJERDSVIKA',\n    6084: 'LARSNES',\n    6085: 'LARSNES',\n    6086: 'KVAMS�Y',\n    6087: 'KVAMS�Y',\n    6088: 'SANDSHAMN',\n    6089: 'SANDSHAMN',\n    6094: 'LEIN�Y',\n    6095: 'B�LANDET',\n    6096: 'RUNDE',\n    6098: 'NERLANDS�Y',\n    6099: 'FOSNAV�G',\n    6110: 'AUSTEFJORDEN',\n    6120: 'FOLKESTAD',\n    6133: 'LAUVSTAD',\n    6134: 'LAUVSTAD',\n    6138: 'SYVDE',\n    6139: 'FISK�',\n    6140: 'SYVDE',\n    6141: 'ROVDE',\n    6142: 'EIDS�',\n    6143: 'FISK�',\n    6144: 'SYLTE',\n    6146: '�HEIM',\n    6147: '�HEIM',\n    6149: '�RAM',\n    6160: 'HOVDEBYGDA',\n    6161: 'HOVDEBYGDA',\n    6165: 'S�B�',\n    6166: 'S�B�',\n    6170: 'VARTDAL',\n    6171: 'VARTDAL',\n    6174: 'BARSTADVIK',\n    6183: 'TRANDAL',\n    6184: 'STORESTANDAL',\n    6190: 'BJ�RKE',\n    6196: 'NORANGSFJORDEN',\n    6200: 'STRANDA',\n    6201: 'STRANDA',\n    6210: 'VALLDAL',\n    6211: 'VALLDAL',\n    6212: 'LIABYGDA',\n    6213: 'TAFJORD',\n    6214: 'NORDDAL',\n    6215: 'EIDSDAL',\n    6216: 'GEIRANGER',\n    6217: 'GEIRANGER',\n    6218: 'HELLESYLT',\n    6219: 'HELLESYLT',\n    6220: 'STRAUMGJERDE',\n    6222: 'IKORNNES',\n    6223: 'IKORNNES',\n    6224: 'HUNDEIDVIK',\n    6230: 'SYKKYLVEN',\n    6238: 'STRAUMGJERDE',\n    6239: 'SYKKYLVEN',\n    6240: '�RSKOG',\n    6249: '�RSKOG',\n    6250: 'STORDAL',\n    6255: 'EIDSDAL',\n    6259: 'STORDAL',\n    6260: 'SKODJE',\n    6263: 'SKODJE',\n    6264: 'TENNFJORD',\n    6265: 'VATNE',\n    6270: 'BRATTV�G',\n    6272: 'HILDRE',\n    6280: 'S�VIK',\n    6281: 'S�VIK',\n    6282: 'BRATTV�G',\n    6283: 'VATNE',\n    6285: 'STOREKALV�Y',\n    6290: 'HARAMS�Y',\n    6291: 'HARAMS�Y',\n    6292: 'KJERSTAD',\n    6293: 'LONGVA',\n    6294: 'FJ�RTOFT',\n    6300: '�NDALSNES',\n    6301: '�NDALSNES',\n    6310: 'VEBLUNGSNES',\n    6315: 'INNFJORDEN',\n    6320: 'ISFJORDEN',\n    6330: 'VERMA',\n    6331: 'VERMA',\n    6339: 'ISFJORDEN',\n    6350: 'EIDSBYGDA',\n    6360: '�FARNES',\n    6361: '�FARNES',\n    6363: 'MITTET',\n    6364: 'VISTDAL',\n    6365: 'VISTDAL',\n    6385: 'M�NDALEN',\n    6386: 'M�NDALEN',\n    6387: 'V�GSTRANDA',\n    6388: 'V�GSTRANDA',\n    6389: 'FIKSDAL',\n    6390: 'VESTNES',\n    6391: 'TRESFJORD',\n    6392: 'VIKEBUKT',\n    6393: 'TOMREFJORD',\n    6394: 'FIKSDAL',\n    6395: 'REKDAL',\n    6396: 'VIKEBUKT',\n    6397: 'TRESFJORD',\n    6398: 'TOMREFJORD',\n    6399: 'VESTNES',\n    6408: 'AUREOSEN',\n    6418: 'SEKKEN',\n    6430: 'BUD',\n    6431: 'BUD',\n    6433: 'HUSTAD',\n    6440: 'ELNESV�GEN',\n    6443: 'TORNES I ROMSDAL',\n    6444: 'FARSTAD',\n    6445: 'MALMEFJORDEN',\n    6446: 'FARSTAD',\n    6447: 'ELNESV�GEN',\n    6450: 'HJELSET',\n    6452: 'KLEIVE',\n    6453: 'KLEIVE',\n    6454: 'HJELSET',\n    6455: 'KORTGARDEN',\n    6456: 'SK�LA',\n    6457: 'BOLS�YA',\n    6458: 'SK�LA',\n    6462: 'RAUDSAND',\n    6470: 'ERESFJORD',\n    6471: 'ERESFJORD',\n    6472: 'EIKESDAL',\n    6475: 'MIDSUND',\n    6476: 'MIDSUND',\n    6480: 'AUKRA',\n    6481: 'AUKRA',\n    6483: 'ONA',\n    6484: 'SAND�Y',\n    6485: 'HAR�Y',\n    6486: 'ORTEN',\n    6487: 'HAR�Y',\n    6488: 'MYKLEBOST',\n    6490: 'EIDE',\n    6493: 'LYNGSTAD',\n    6494: 'VEVANG',\n    6499: 'EIDE',\n    6570: 'SM�LA',\n    6571: 'SM�LA',\n    6590: 'TUSTNA',\n    6591: 'TUSTNA',\n    6600: 'SUNNDALS�RA',\n    6601: 'SUNNDALS�RA',\n    6610: '�KSENDAL',\n    6611: 'FURUGRENDA',\n    6612: 'GR�A',\n    6613: 'GJ�RA',\n    6614: 'GJ�RA',\n    6620: '�LVUNDEID',\n    6622: '�LVUNDFJORD',\n    6623: '�LVUNDFJORD',\n    6627: 'TINGVOLL',\n    6628: 'MEISINGSET',\n    6629: 'TORJULV�GEN',\n    6630: 'TINGVOLL',\n    6631: 'BATNFJORDS�RA',\n    6632: 'BATNFJORDS�RA',\n    6633: 'GJEMNES',\n    6636: 'ANGVIK',\n    6637: 'FLEMMA',\n    6638: 'OSMARKA',\n    6639: 'TORVIKBUKT',\n    6640: 'KVANNE',\n    6641: 'TORVIKBUKT',\n    6642: 'STANGVIK',\n    6643: 'B�FJORDEN',\n    6644: 'B�VERFJORD',\n    6645: 'TODALEN',\n    6650: 'SURNADAL',\n    6652: 'SURNADAL',\n    6653: '�VRE SURNADAL',\n    6655: 'VIND�LA',\n    6656: 'SURNADAL',\n    6657: 'RINDAL',\n    6658: 'RINDALSSKOGEN',\n    6659: 'RINDAL',\n    6670: '�YDEGARD',\n    6671: '�YDEGARD',\n    6674: 'KVISVIK',\n    6680: 'HALSANAUSTAN',\n    6683: 'V�GLAND',\n    6686: 'VALS�YBOTN',\n    6687: 'VALS�YFJORD',\n    6688: 'V�GLAND',\n    6689: 'AURE',\n    6690: 'AURE',\n    6693: 'MJOSUNDET',\n    6694: 'FOLDFJORDEN',\n    6697: 'VIHALS',\n    6698: 'LESUND',\n    6699: 'KJ�RSVIKBUGEN',\n    6704: 'DEKNEPOLLEN',\n    6707: 'RAUDEBERG',\n    6708: 'BRYGGJA',\n    6710: 'RAUDEBERG',\n    6711: 'BRYGGJA',\n    6713: 'ALMENNINGEN',\n    6714: 'SILDA',\n    6715: 'BARMEN',\n    6716: 'HUSEV�G',\n    6717: 'FLATRAKET',\n    6718: 'DEKNEPOLLEN',\n    6719: 'SKATESTRAUMEN',\n    6721: 'SVELGEN',\n    6723: 'SVELGEN',\n    6726: 'BREMANGER',\n    6727: 'BREMANGER',\n    6728: 'KALV�G',\n    6729: 'KALV�G',\n    6730: 'DAVIK',\n    6734: 'RUGSUND',\n    6737: '�LFOTEN',\n    6740: 'SELJE',\n    6741: 'SELJE',\n    6750: 'STADLANDET',\n    6751: 'STADLANDET',\n    6761: 'HORNINDAL',\n    6763: 'HORNINDAL',\n    6776: 'KJ�LSDALEN',\n    6777: 'ST�RHEIM',\n    6778: 'LOTE',\n    6779: 'HOLM�YANE',\n    6784: 'OLDEN',\n    6788: 'OLDEN',\n    6789: 'LOEN',\n    6790: 'LOEN',\n    6791: 'OLDEDALEN',\n    6792: 'BRIKSDALSBRE',\n    6793: 'INNVIK',\n    6794: 'INNVIK',\n    6795: 'BLAKS�TER',\n    6796: 'HOPLAND',\n    6797: 'UTVIK',\n    6798: 'HJELLEDALEN',\n    6799: 'OPPSTRYN',\n    6806: 'NAUSTDAL',\n    6817: 'NAUSTDAL',\n    6818: 'HAUKEDALEN',\n    6819: 'F�RDE',\n    6820: 'F�RDE',\n    6826: 'BYRKJELO',\n    6827: 'BREIM',\n    6828: 'HESTENES�YRA',\n    6829: 'HYEN',\n    6830: 'BYRKJELO',\n    6831: 'HYEN',\n    6841: 'SKEI I J�LSTER',\n    6843: 'SKEI I J�LSTER',\n    6844: 'VASSENDEN',\n    6845: 'FJ�RLAND',\n    6847: 'VASSENDEN',\n    6848: 'FJ�RLAND',\n    6849: 'KAUPANGER',\n    6854: 'KAUPANGER',\n    6855: 'FR�NNINGEN',\n    6856: 'SOGNDAL',\n    6857: 'SOGNDAL',\n    6858: 'FARDAL',\n    6859: 'SLINDE',\n    6861: 'LEIKANGER',\n    6863: 'LEIKANGER',\n    6866: 'GAUPNE',\n    6867: 'HAFSLO',\n    6868: 'GAUPNE',\n    6869: 'HAFSLO',\n    6870: 'ORNES',\n    6871: 'JOSTEDAL',\n    6872: 'LUSTER',\n    6873: 'MARIFJ�RA',\n    6874: 'LUSTER',\n    6875: 'H�YHEIMSVIK',\n    6876: 'SKJOLDEN',\n    6877: 'FORTUN',\n    6878: 'VEITASTROND',\n    6879: 'SOLVORN',\n    6881: '�RDALSTANGEN',\n    6882: '�VRE �RDAL',\n    6884: '�VRE �RDAL',\n    6885: '�RDALSTANGEN',\n    6886: 'L�RDAL',\n    6887: 'L�RDAL',\n    6888: 'BORGUND',\n    6891: 'VIK I SOGN',\n    6893: 'VIK I SOGN',\n    6894: 'VANGSNES',\n    6895: 'FEIOS',\n    6896: 'FRESVIK',\n    6898: 'BALESTRAND',\n    6899: 'BALESTRAND',\n    6912: 'KINN',\n    6913: 'FLOR�',\n    6914: 'SVAN�YBUKT',\n    6915: 'ROGNALDSV�G',\n    6916: 'BAREKSTAD',\n    6917: 'BATALDEN',\n    6918: 'S�R-SKORPA',\n    6919: 'TANS�Y',\n    6921: 'HARDBAKKE',\n    6924: 'HARDBAKKE',\n    6926: 'KRAKHELLA',\n    6927: 'YTR�YGREND',\n    6928: 'KOLGROV',\n    6929: 'HERSVIKBYGDA',\n    6940: 'EIKEFJORD',\n    6941: 'EIKEFJORD',\n    6942: 'SVORTEVIK',\n    6944: 'STAVANG',\n    6946: 'LAVIK',\n    6947: 'LAVIK',\n    6951: 'LEIRVIK I SOGN',\n    6953: 'LEIRVIK I SOGN',\n    6957: 'HYLLESTAD',\n    6958: 'S�RB�V�G',\n    6959: 'S�RB�V�G',\n    6964: 'KORSSUND',\n    6966: 'GUDDAL',\n    6967: 'HELLEVIK I FJALER',\n    6968: 'FLEKKE',\n    6969: 'STRAUMSNES',\n    6975: 'SKILBREI',\n    6976: 'BYGSTAD',\n    6977: 'BYGSTAD',\n    6978: 'VIKSDALEN',\n    6980: 'ASKVOLL',\n    6982: 'HOLMEDAL',\n    6983: 'KVAMMEN',\n    6984: 'STONGFJORDEN',\n    6985: 'ATL�Y',\n    6986: 'V�RLANDET',\n    6987: 'BULANDET',\n    6988: 'ASKVOLL',\n    6991: 'H�YANGER',\n    6993: 'H�YANGER',\n    6994: 'NESSANE',\n    6995: 'KYRKJEB�',\n    6996: 'VADHEIM',\n    6997: 'VADHEIM',\n    7057: 'JONSVATNET',\n    7058: 'JAKOBSLI',\n    7059: 'JAKOBSLI',\n    7070: 'BOSBERG',\n    7071: 'TRONDHEIM',\n    7072: 'HEIMDAL',\n    7074: 'SPONGDAL',\n    7075: 'TILLER',\n    7078: 'SAUPSTAD',\n    7079: 'FLAT�SEN',\n    7080: 'HEIMDAL',\n    7081: 'SJETNEMARKA',\n    7082: 'KATTEM',\n    7083: 'LEINSTRAND',\n    7088: 'HEIMDAL',\n    7089: 'HEIMDAL',\n    7097: 'SAUPSTAD',\n    7098: 'SAUPSTAD',\n    7099: 'FLAT�SEN',\n    7100: 'RISSA',\n    7101: 'RISSA',\n    7105: 'STADSBYGD',\n    7110: 'FEV�G',\n    7111: 'HASSELVIKA',\n    7112: 'HASSELVIKA',\n    7113: 'HUSBYSJ�EN',\n    7114: 'R�KV�G',\n    7115: 'HUSBYSJ�EN',\n    7116: 'R�KV�G',\n    7119: 'STADSBYGD',\n    7120: 'LEKSVIK',\n    7121: 'LEKSVIK',\n    7125: 'VANVIKAN',\n    7126: 'VANVIKAN',\n    7127: 'OPPHAUG',\n    7129: 'BREKSTAD',\n    7130: 'BREKSTAD',\n    7140: 'OPPHAUG',\n    7142: 'UTHAUG',\n    7150: 'STORFOSNA',\n    7151: 'STORFOSNA',\n    7152: 'KR�KV�G',\n    7153: 'GARTEN',\n    7156: 'LEKSA',\n    7159: 'BJUGN',\n    7160: 'BJUGN',\n    7164: 'LYS�YSUNDET',\n    7165: 'OKSVOLL',\n    7166: 'TARVA',\n    7167: 'VALLERSUND',\n    7168: 'LYS�YSUNDET',\n    7169: '�FJORD',\n    7170: '�FJORD',\n    7174: 'REVSNES',\n    7175: 'STOKK�Y',\n    7176: 'LINES�YA',\n    7177: 'REVSNES',\n    7178: 'STOKK�Y',\n    7180: 'ROAN',\n    7181: 'ROAN',\n    7190: 'BESSAKER',\n    7194: 'BRANDSFJORD',\n    7200: 'KYRKS�TER�RA',\n    7201: 'KYRKS�TER�RA',\n    7203: 'VINJE�RA',\n    7206: 'HELLANDSJ�EN',\n    7211: 'KORSVEGEN',\n    7212: 'KORSVEGEN',\n    7213: 'G�SBAKKEN',\n    7227: 'GIMSE',\n    7228: 'KV�L',\n    7231: 'LUNDAMO',\n    7232: 'LUNDAMO',\n    7234: 'LER',\n    7235: 'LER',\n    7236: 'HOVIN I GAULDAL',\n    7238: 'HOVIN I GAULDAL',\n    7239: 'HITRA',\n    7240: 'HITRA',\n    7241: 'ANSNES',\n    7242: 'KNARRLAGSUND',\n    7243: 'KVENV�R',\n    7244: 'KNARRLAGSUND',\n    7245: 'KVENV�R',\n    7246: 'SANDSTAD',\n    7247: 'HESTVIKA',\n    7250: 'MELANDSJ�',\n    7252: 'DOLM�Y',\n    7255: 'SUNDLANDET',\n    7256: 'HEMNSKJELA',\n    7257: 'SNILLFJORD',\n    7259: 'SNILLFJORD',\n    7260: 'SISTRANDA',\n    7261: 'SISTRANDA',\n    7263: 'HAMARVIK',\n    7264: 'HAMARVIK',\n    7266: 'KVERVA',\n    7267: 'KVERVA',\n    7268: 'TITRAN',\n    7270: 'DYRVIK',\n    7273: 'NORDDYR�Y',\n    7274: 'NORDDYR�Y',\n    7280: 'SULA',\n    7282: 'BOG�YV�R',\n    7284: 'MAUSUND',\n    7285: 'GJ�SINGEN',\n    7286: 'S�RBUR�Y',\n    7287: 'SAU�Y',\n    7288: 'SOKNEDAL',\n    7289: 'SOKNEDAL',\n    7290: 'ST�REN',\n    7291: 'ST�REN',\n    7295: 'ROGNES',\n    7298: 'BUDALEN',\n    7310: 'GJ�LME',\n    7315: 'LENSVIK',\n    7316: 'LENSVIK',\n    7318: 'AGDENES',\n    7319: 'AGDENES',\n    7320: 'FANNREM',\n    7321: 'FANNREM',\n    7327: 'SVORKMO',\n    7329: 'SVORKMO',\n    7331: 'L�KKEN VERK',\n    7332: 'L�KKEN VERK',\n    7333: 'STOR�S',\n    7334: 'STOR�S',\n    7335: 'JERPSTAD',\n    7336: 'MELDAL',\n    7338: 'MELDAL',\n    7340: 'OPPDAL',\n    7341: 'OPPDAL',\n    7342: 'L�NSET',\n    7343: 'VOGNILL',\n    7345: 'DRIVA',\n    7350: 'BUVIKA',\n    7351: 'BUVIKA',\n    7353: 'B�RSA',\n    7354: 'VIGGJA',\n    7355: 'EGGKLEIVA',\n    7356: 'SKAUN',\n    7357: 'SKAUN',\n    7358: 'B�RSA',\n    7361: 'R�ROS',\n    7370: 'BREKKEBYGD',\n    7372: 'GL�MOS',\n    7374: 'R�ROS',\n    7375: 'R�ROS',\n    7380: '�LEN',\n    7383: 'HALTDALEN',\n    7384: '�LEN',\n    7510: 'SKATVAL',\n    7511: 'SKATVAL',\n    7517: 'HELL',\n    7519: 'ELVARLI',\n    7520: 'HEGRA',\n    7525: 'FLORNES',\n    7529: 'HEGRA',\n    7530: 'MER�KER',\n    7531: 'MER�KER',\n    7533: 'KOPPER�',\n    7540: 'KL�BU',\n    7541: 'KL�BU',\n    7549: 'TANEM',\n    7550: 'HOMMELVIK',\n    7551: 'HOMMELVIK',\n    7560: 'VIKHAMMER',\n    7562: 'SAKSVIK',\n    7563: 'MALVIK',\n    7566: 'VIKHAMMER',\n    7570: 'HELL',\n    7584: 'SELBUSTRAND',\n    7590: 'TYDAL',\n    7591: 'TYDAL',\n    7596: 'FLAKNAN',\n    7619: 'SKOGN',\n    7620: 'SKOGN',\n    7622: 'MARKABYGDA',\n    7623: 'RONGLAN',\n    7624: 'EKNE',\n    7629: 'YTTER�Y',\n    7630: '�SEN',\n    7631: '�SEN',\n    7632: '�SENFJORD',\n    7633: 'FROSTA',\n    7634: 'FROSTA',\n    7660: 'VUKU',\n    7661: 'VUKU',\n    7690: 'MOSVIK',\n    7691: 'MOSVIK',\n    7710: 'SPARBU',\n    7730: 'BEITSTAD',\n    7732: 'STEINKJER',\n    7733: 'SPARBU',\n    7739: 'BEITSTAD',\n    7740: 'STEINSDALEN',\n    7741: 'STEINSDALEN',\n    7742: 'YTTERV�G',\n    7744: 'HEPS�Y',\n    7745: 'OPPLAND',\n    7746: 'HASV�G',\n    7748: 'SETER',\n    7750: 'NAMDALSEID',\n    7751: 'NAMDALSEID',\n    7760: 'SN�SA',\n    7761: 'SN�SA',\n    7770: 'FLATANGER',\n    7771: 'FLATANGER',\n    7777: 'NORD-STATLAND',\n    7790: 'MALM',\n    7791: 'MALM',\n    7795: 'FOLLAFOSS',\n    7796: 'FOLLAFOSS',\n    7797: 'VERRABOTN',\n    7817: 'SALSNES',\n    7818: 'LUND',\n    7819: 'FOSSLANDSOSEN',\n    7820: 'SPILLUM',\n    7821: 'SPILLUM',\n    7822: 'BANGSUND',\n    7823: 'BANGSUND',\n    7856: 'J�A',\n    7860: 'SKAGE I NAMDALEN',\n    7863: 'OVERHALLA',\n    7864: 'OVERHALLA',\n    7869: 'SKAGE I NAMDALEN',\n    7870: 'GRONG',\n    7871: 'GRONG',\n    7873: 'HARRAN',\n    7874: 'HARRAN',\n    7876: 'KONGSMOEN',\n    7877: 'H�YLANDET',\n    7878: 'H�YLANDET',\n    7881: 'NORDLI',\n    7882: 'NORDLI',\n    7884: 'S�RLI',\n    7885: 'S�RLI',\n    7890: 'NAMSSKOGAN',\n    7891: 'NAMSSKOGAN',\n    7892: 'TRONES',\n    7893: 'SKOROVATN',\n    7896: 'BREKKVASSELV',\n    7897: 'LIMINGEN',\n    7898: 'LIMINGEN',\n    7940: 'OTTERS�Y',\n    7941: 'OTTERS�Y',\n    7944: 'INDRE N�R�Y',\n    7950: 'ABELV�R',\n    7960: 'SALSBRUKET',\n    7970: 'KOLVEREID',\n    7971: 'KOLVEREID',\n    7973: 'GJERDINGA',\n    7979: 'TERR�K',\n    7980: 'TERR�K',\n    7981: 'HARANGSFJORD',\n    7982: 'BINDALSEIDET',\n    7983: 'BINDALSEIDET',\n    7985: 'FOLDEREID',\n    7986: 'FOLDEREID',\n    7990: 'NAUSTBUKTA',\n    7993: 'GUTVIK',\n    7994: 'LEKA',\n    7995: 'LEKA',\n    8050: 'TVERLANDET',\n    8056: 'SALTSTRAUMEN',\n    8057: 'SALTSTRAUMEN',\n    8058: 'TVERLANDET',\n    8062: 'V�R�Y',\n    8063: 'V�R�Y',\n    8064: 'R�ST',\n    8065: 'R�ST',\n    8093: 'KJERRING�Y',\n    8094: 'FLEINV�R',\n    8095: 'HELLIGV�R',\n    8096: 'BLIKSV�R',\n    8097: 'GIV�R',\n    8098: 'LANDEGODE',\n    8099: 'JAN MAYEN',\n    8100: 'MISV�R',\n    8102: 'SKJERSTAD',\n    8103: 'BREIVIK I SALTEN',\n    8108: 'MISV�R',\n    8110: 'MOLDJORD',\n    8114: 'TOLL�',\n    8118: 'MOLDJORD',\n    8120: 'NYG�RDSJ�EN',\n    8128: 'YTRE BEIARN',\n    8130: 'SANDHORN�Y',\n    8134: 'S�RARN�Y',\n    8135: 'S�RARN�Y',\n    8136: 'NORDARN�Y',\n    8138: 'INNDYR',\n    8140: 'INNDYR',\n    8145: 'STORVIK',\n    8146: 'REIP�',\n    8149: 'NEVERDAL',\n    8150: '�RNES',\n    8151: '�RNES',\n    8157: 'MEL�Y',\n    8158: 'BOLGA',\n    8159: 'ST�TT',\n    8160: 'GLOMFJORD',\n    8161: 'GLOMFJORD',\n    8168: 'ENGAV�GEN',\n    8170: 'ENGAV�GEN',\n    8178: 'HALSA',\n    8179: 'HALSA',\n    8181: 'MYKEN',\n    8182: 'MELFJORDBOTN',\n    8183: 'V�GAHOLMEN',\n    8184: '�GSKARDET',\n    8185: 'V�GAHOLMEN',\n    8186: 'TJONGSFJORDEN',\n    8187: 'JEKTVIK',\n    8188: 'NORDVERNES',\n    8189: 'GJERSVIKGRENDA',\n    8190: 'S�RFJORDEN',\n    8193: 'R�D�Y',\n    8195: 'GJER�Y',\n    8196: 'SELS�YVIK',\n    8197: 'STORSELS�Y',\n    8198: 'NORDNES�Y',\n    8215: 'VALNESFJORD',\n    8218: 'FAUSKE',\n    8219: 'FAUSKE',\n    8220: 'R�SVIK',\n    8226: 'STRAUMEN',\n    8230: 'SULITJELMA',\n    8231: 'SULITJELMA',\n    8232: 'STRAUMEN',\n    8233: 'VALNESFJORD',\n    8255: 'R�KLAND',\n    8256: 'R�KLAND',\n    8260: 'INNHAVET',\n    8261: 'INNHAVET',\n    8264: 'ENGAN',\n    8266: 'M�RSVIKBOTN',\n    8270: 'DRAG',\n    8271: 'DRAG',\n    8273: 'NEVERVIK',\n    8274: 'MUSKEN',\n    8275: 'STORJORD I TYSFJORD',\n    8276: 'ULVSV�G',\n    8278: 'STOR�',\n    8281: 'LEINESFJORD',\n    8283: 'LEINESFJORD',\n    8285: 'LEINES',\n    8286: 'NORDFOLD',\n    8287: 'ENGEL�YA',\n    8288: 'BOG�Y',\n    8289: 'ENGEL�YA',\n    8290: 'SKUTVIK',\n    8294: 'HAMAR�Y',\n    8297: 'TRAN�Y',\n    8298: 'HAMAR�Y',\n    8309: 'KABELV�G',\n    8310: 'KABELV�G',\n    8311: 'HENNINGSV�R',\n    8312: 'HENNINGSV�R',\n    8313: 'KLEPPSTAD',\n    8314: 'GIMS�YSAND',\n    8315: 'LAUKVIK',\n    8316: 'LAUPSTAD',\n    8317: 'STR�NSTAD',\n    8320: 'SKROVA',\n    8322: 'BRETTESNES',\n    8323: 'STORFJELL',\n    8324: 'DIGERMULEN',\n    8325: 'TENGELFJORD',\n    8326: 'MYRLAND',\n    8328: 'STORMOLLA',\n    8340: 'STAMSUND',\n    8352: 'SENNESVIK',\n    8357: 'VALBERG',\n    8360: 'B�STAD',\n    8361: 'B�STAD',\n    8370: 'LEKNES',\n    8372: 'GRAVDAL',\n    8373: 'BALLSTAD',\n    8374: 'BALLSTAD',\n    8376: 'LEKNES',\n    8377: 'GRAVDAL',\n    8378: 'STAMSUND',\n    8380: 'RAMBERG',\n    8382: 'NAPP',\n    8384: 'SUND I LOFOTEN',\n    8387: 'FREDVANG',\n    8388: 'RAMBERG',\n    8390: 'REINE',\n    8392: 'S�RV�GEN',\n    8393: 'S�RV�GEN',\n    8398: 'REINE',\n    8409: 'GULLESFJORD',\n    8410: 'L�DINGEN',\n    8411: 'L�DINGEN',\n    8412: 'VESTBYGD',\n    8413: 'KVITNES',\n    8414: 'HENNES',\n    8426: 'BARKESTAD',\n    8428: 'TUNSTAD',\n    8430: 'MYRE',\n    8432: 'ALSV�G',\n    8438: 'ST�',\n    8439: 'MYRE',\n    8445: 'MELBU',\n    8447: 'LONKAN',\n    8450: 'STOKMARKNES',\n    8455: 'STOKMARKNES',\n    8459: 'MELBU',\n    8465: 'STRAUMSJ�EN',\n    8469: 'B� I VESTER�LEN',\n    8470: 'B� I VESTER�LEN',\n    8475: 'STRAUMSJ�EN',\n    8480: 'ANDENES',\n    8481: 'BLEIK',\n    8483: 'ANDENES',\n    8484: 'RIS�YHAMN',\n    8485: 'DVERBERG',\n    8488: 'N�SS',\n    8489: 'NORDMELA',\n    8493: 'RIS�YHAMN',\n    8513: 'ANKENES',\n    8520: 'ANKENES',\n    8521: 'ANKENES',\n    8522: 'BEISFJORD',\n    8523: 'SKJOMEN',\n    8530: 'BJERKVIK',\n    8531: 'BJERKVIK',\n    8533: 'BOGEN I OFOTEN',\n    8534: 'LILAND',\n    8535: 'T�RSTAD',\n    8536: 'EVENES',\n    8539: 'BOGEN I OFOTEN',\n    8540: 'BALLANGEN',\n    8543: 'KJELDEBOTN',\n    8546: 'BALLANGEN',\n    8590: 'KJ�PSVIK',\n    8591: 'KJ�PSVIK',\n    8615: 'SKONSENG',\n    8616: 'MO I RANA',\n    8617: 'DALSGRENDA',\n    8630: 'STORFORSHEI',\n    8634: 'MO I RANA',\n    8638: 'STORFORSHEI',\n    8640: 'HEMNESBERGET',\n    8641: 'HEMNESBERGET',\n    8642: 'FINNEIDFJORD',\n    8643: 'BJERKA',\n    8644: 'BJERKA',\n    8646: 'KORGEN',\n    8647: 'BLEIKVASSLIA',\n    8648: 'KORGEN',\n    8672: 'ELSFJORD',\n    8680: 'TROFORS',\n    8681: 'TROFORS',\n    8690: 'HATTFJELLDAL',\n    8691: 'HATTFJELLDAL',\n    8700: 'NESNA',\n    8701: 'NESNA',\n    8720: 'VIKHOLMEN',\n    8723: 'HUSBY',\n    8724: 'SAURA',\n    8725: 'UTSKARPEN',\n    8730: 'BRATLAND',\n    8732: 'ALDRA',\n    8733: 'STUVLAND',\n    8735: 'STOKKV�GEN',\n    8740: 'NORD-SOLV�R',\n    8742: 'SELV�R',\n    8743: 'INDRE KVAR�Y',\n    8750: 'TONNES',\n    8752: 'KONSVIKOSEN',\n    8753: 'KONSVIKOSEN',\n    8754: '�RESVIK',\n    8762: 'SLENESET',\n    8764: 'LOVUND',\n    8766: 'LUR�Y',\n    8767: 'LUR�Y',\n    8770: 'TR�NA',\n    8813: 'L�KTA',\n    8820: 'D�NNA',\n    8827: 'D�NNA',\n    8830: 'VANDVE',\n    8842: 'BRAS�Y',\n    8844: 'SANDV�R',\n    8854: 'AUSTB�',\n    8860: 'TJ�TTA',\n    8861: 'TJ�TTA',\n    8865: 'TRO',\n    8870: 'VISTHUS',\n    8880: 'B�R�YV�GEN',\n    8890: 'LEIRFJORD',\n    8891: 'LEIRFJORD',\n    8892: 'SUND�Y',\n    8897: 'BARDAL',\n    8960: 'VELFJORD',\n    8961: 'VELFJORD',\n    8976: 'VEVELSTAD',\n    8977: 'VEVELSTAD',\n    8980: 'VEGA',\n    8981: 'VEGA',\n    8985: 'YLVINGEN',\n    9020: 'TROMSDALEN',\n    9021: 'TROMSDALEN',\n    9022: 'KROKELVDALEN',\n    9023: 'KROKELVDALEN',\n    9024: 'TOMASJORD',\n    9027: 'RAMFJORDBOTN',\n    9029: 'TROMSDALEN',\n    9030: 'SJURSNES',\n    9034: 'OLDERVIK',\n    9037: 'TROMS�',\n    9038: 'TROMS�',\n    9040: 'NORDKJOSBOTN',\n    9042: 'LAKSVATN',\n    9043: 'J�VIK',\n    9046: 'OTEREN',\n    9049: 'NORDKJOSBOTN',\n    9050: 'STORSTEINNES',\n    9055: 'MEISTERVIK',\n    9056: 'MORTENHALS',\n    9057: 'VIKRAN',\n    9059: 'STORSTEINNES',\n    9060: 'LYNGSEIDET',\n    9062: 'FURUFLATEN',\n    9064: 'SVENSBY',\n    9068: 'NORD-LENANGEN',\n    9069: 'LYNGSEIDET',\n    9106: 'STRAUMSBUKTA',\n    9107: 'KVAL�YA',\n    9108: 'KVAL�YA',\n    9110: 'SOMMAR�Y',\n    9118: 'BRENSHOLMEN',\n    9119: 'SOMMAR�Y',\n    9120: 'VENGS�Y',\n    9128: 'TUSS�Y',\n    9130: 'HANSNES',\n    9131: 'K�RVIK',\n    9132: 'STAKKVIK',\n    9134: 'HANSNES',\n    9135: 'VANNV�G',\n    9136: 'VANNAREID',\n    9137: 'VANNV�G',\n    9138: 'KARLS�Y',\n    9140: 'REBBENES',\n    9141: 'MJ�LVIK',\n    9142: 'SKIBOTN',\n    9143: 'SKIBOTN',\n    9144: 'SAMUELSBERG',\n    9145: 'SAMUELSBERG',\n    9146: 'OLDERDALEN',\n    9147: 'BIRTAVARRE',\n    9148: 'OLDERDALEN',\n    9149: 'BIRTAVARRE',\n    9151: 'STORSLETT',\n    9152: 'S�RKJOSEN',\n    9153: 'ROTSUND',\n    9154: 'STORSLETT',\n    9155: 'S�RKJOSEN',\n    9159: 'HAVNNES',\n    9161: 'BURFJORD',\n    9162: 'S�RSTRAUMEN',\n    9163: 'J�KELFJORD',\n    9169: 'BURFJORD',\n    9170: 'LONGYEARBYEN',\n    9171: 'LONGYEARBYEN',\n    9173: 'NY-�LESUND',\n    9174: 'HOPEN',\n    9175: 'SVEAGRUVA',\n    9176: 'BJ�RN�YA',\n    9178: 'BARENTSBURG',\n    9180: 'SKJERV�Y',\n    9181: 'HAMNEIDET',\n    9182: 'SEGLVIK',\n    9184: 'REINFJORD',\n    9185: 'SPILDRA',\n    9186: 'ANDSNES',\n    9187: 'VALANHAMN',\n    9189: 'SKJERV�Y',\n    9190: 'AKKARVIK',\n    9192: 'ARN�YHAMN',\n    9193: 'NIKKEBY',\n    9194: 'LAUKSLETTA',\n    9195: '�RVIKSAND',\n    9197: 'UL�YBUKT',\n    9300: 'FINNSNES',\n    9302: 'ROSSFJORDSTRAUMEN',\n    9303: 'SILSAND',\n    9304: 'VANGSVIK',\n    9310: 'S�RREISA',\n    9311: 'BR�STADBOTN',\n    9315: 'S�RREISA',\n    9316: 'BR�STADBOTN',\n    9321: 'MOEN',\n    9322: 'KARLSTAD',\n    9325: 'BARDUFOSS',\n    9326: 'BARDUFOSS',\n    9329: 'MOEN',\n    9334: '�VERBYGD',\n    9335: '�VERBYGD',\n    9336: 'RUNDHAUG',\n    9350: 'SJ�VEGAN',\n    9355: 'SJ�VEGAN',\n    9357: 'TENNEVOLL',\n    9358: 'TENNEVOLL',\n    9360: 'BARDU',\n    9365: 'BARDU',\n    9370: 'SILSAND',\n    9372: 'GIBOSTAD',\n    9373: 'BOTNHAMN',\n    9376: 'SKATVIK',\n    9379: 'GRYLLEFJORD',\n    9380: 'GRYLLEFJORD',\n    9381: 'TORSKEN',\n    9382: 'GIBOSTAD',\n    9384: 'SKALAND',\n    9385: 'SKALAND',\n    9386: 'SENJAHOPEN',\n    9387: 'SENJAHOPEN',\n    9388: 'FJORDGARD',\n    9389: 'HUS�Y I SENJA',\n    9391: 'STONGLANDSEIDET',\n    9392: 'STONGLANDSEIDET',\n    9393: 'FLAKSTADV�G',\n    9395: 'KALDFARNES',\n    9419: 'S�RVIK',\n    9420: 'LUNDENES',\n    9423: 'GR�TAV�R',\n    9424: 'KJ�TTA',\n    9425: 'SANDS�Y',\n    9426: 'BJARK�Y',\n    9427: 'MEL�YV�R',\n    9430: 'SANDTORG',\n    9436: 'KONGSVIK',\n    9439: 'EVENSKJER',\n    9440: 'EVENSKJER',\n    9441: 'FJELLDAL',\n    9442: 'RAMSUND',\n    9443: 'MYKLEBOSTAD',\n    9444: 'HOL I TJELDSUND',\n    9445: 'TOVIK',\n    9446: 'GROVFJORD',\n    9447: 'GROVFJORD',\n    9448: 'RAMSUND',\n    9450: 'HAMNVIK',\n    9451: 'HAMNVIK',\n    9453: 'KR�KR�HAMN',\n    9454: '�NSTAD',\n    9455: 'ENGENES',\n    9456: 'ENGENES',\n    9470: 'GRATANGEN',\n    9471: 'GRATANGEN',\n    9475: 'BORKENES',\n    9476: 'BORKENES',\n    9519: 'KVIBY',\n    9520: 'KAUTOKEINO',\n    9521: 'KAUTOKEINO',\n    9525: 'MAZE',\n    9531: 'KVALFJORD',\n    9532: 'HAKKSTABBEN',\n    9533: 'KONGSHUS',\n    9536: 'KORSFJORDEN',\n    9540: 'TALVIK',\n    9545: 'LANGFJORDBOTN',\n    9550: '�KSFJORD',\n    9580: 'BERGSFJORD',\n    9582: 'NUVSV�G',\n    9583: 'LANGFJORDHAMN',\n    9584: 'S�R-TVERRFJORD',\n    9585: 'SANDLAND',\n    9586: 'LOPPA',\n    9587: 'SKAVNAKK',\n    9590: 'HASVIK',\n    9591: 'HASVIK',\n    9593: 'BREIVIKBOTN',\n    9595: 'S�RV�R',\n    9609: 'NORDRE SEILAND',\n    9610: 'RYPEFJORD',\n    9611: 'RYPEFJORD',\n    9612: 'FORS�L',\n    9615: 'HAMMERFEST',\n    9616: 'HAMMERFEST',\n    9620: 'KVALSUND',\n    9621: 'KVALSUND',\n    9624: 'REVSNESHAMN',\n    9650: 'AKKARFJORD',\n    9651: 'LANGSTRAND',\n    9657: 'K�RHAMN',\n    9664: 'SAND�YBOTN',\n    9670: 'TUFJORD',\n    9672: 'ING�Y',\n    9690: 'HAV�YSUND',\n    9691: 'HAV�YSUND',\n    9692: 'M�S�Y',\n    9700: 'LAKSELV',\n    9709: 'PORSANGMOEN',\n    9710: 'INDRE BILLEFJORD',\n    9711: 'LAKSELV',\n    9712: 'LAKSELV',\n    9713: 'RUSSENES',\n    9714: 'SNEFJORD',\n    9715: 'KOKELV',\n    9716: 'B�RSELV',\n    9717: 'VEIDNESKLUBBEN',\n    9722: 'SKOGANVARRE',\n    9730: 'KARASJOK',\n    9735: 'KARASJOK',\n    9740: 'LEBESBY',\n    9742: 'KUNES',\n    9750: 'HONNINGSV�G',\n    9751: 'HONNINGSV�G',\n    9760: 'NORDV�GEN',\n    9763: 'SKARSV�G',\n    9764: 'NORDKAPP',\n    9765: 'GJESV�R',\n    9768: 'REPV�G',\n    9770: 'MEHAMN',\n    9771: 'SKJ�NES',\n    9772: 'LANGFJORDNES',\n    9773: 'NERVEI',\n    9775: 'GAMVIK',\n    9782: 'DYFJORD',\n    9790: 'KJ�LLEFJORD',\n    9800: 'VADS�',\n    9811: 'VADS�',\n    9815: 'VADS�',\n    9820: 'VARANGERBOTN',\n    9826: 'SIRMA',\n    9840: 'VARANGERBOTN',\n    9845: 'TANA',\n    9846: 'TANA',\n    9900: 'KIRKENES',\n    9901: 'KIRKENES',\n    9910: 'BJ�RNEVATN',\n    9911: 'JARFJORD',\n    9912: 'HESSENG',\n    9914: 'BJ�RNEVATN',\n    9915: 'KIRKENES',\n    9916: 'HESSENG',\n    9917: 'KIRKENES',\n    9925: 'SVANVIK',\n    9930: 'NEIDEN',\n    9935: 'BUG�YNES',\n    9950: 'VARD�',\n    9951: 'VARD�',\n    9960: 'KIBERG',\n    9980: 'BERLEV�G',\n    9981: 'BERLEV�G',\n    9982: 'KONGSFJORD',\n    9990: 'B�TSFJORD',\n    9991: 'B�TSFJORD',\n  }[E]\n}\n","export const MIN_KID_LENGTH = 2\nexport const MAX_KID_LENGTH = 25\nexport const FNR_LENGTH = 11\n\nexport type ValidateFnrWrapper = {\n  success: boolean\n  msg: string\n  fnr: string\n}\n\nexport enum FNRType {\n  fnr = 'fnr',\n  d = 'dnr',\n  h = 'hnr',\n  fh = 'fhnr',\n}\n\nexport enum Gender {\n  female = 'female',\n  male = 'male',\n}\n\nexport enum Modulo {\n  mod10 = 'mod10',\n  mod11 = 'mod11',\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import orgnr from './services/orgnr'\nimport {\n  generateAccountNumber,\n  validateAccountNumber,\n  getBankRegistryEntryByAccountNumber,\n} from './services/kontonr'\nimport postnummer from './services/postal'\nimport {\n  generateKidMod10,\n  generateKidMod11,\n  validateKid_mod10,\n  validateKid_mod11,\n} from './services/kid'\nimport { generateFnr, validateFnr } from './services/fnr'\nimport { MAX_KID_LENGTH, MIN_KID_LENGTH, Modulo } from './types/types'\n\nfunction newKidNr() {\n  try {\n    const kidBaseSpan = document.querySelector('#kidNumberBase')\n    const kidBase = kidBaseSpan.value.trim().replace(/[^0-9]+/g, '')\n\n    const kidNumberLengthSpan = document.querySelector('#kidNumberLength')\n    const kidNumberLength = kidNumberLengthSpan.value.trim()\n    const randomKidLength =\n      Math.floor(\n        Math.random() * (MAX_KID_LENGTH - kidBase.length - MIN_KID_LENGTH - 1)\n      ) +\n      MIN_KID_LENGTH +\n      kidBase.length // There are three things I hate: overly-complicated variable instantiations, arithmetic, and long comments.\n    const kidLength = kidNumberLength ? kidNumberLength : randomKidLength\n\n    const modulo = document.querySelector('select#modulo_generate').value\n    const kidSpan = document.querySelector('.js-kid-nummer')\n    switch (modulo) {\n      case Modulo.mod10:\n        kidSpan.innerText = generateKidMod10(kidBase, kidLength)\n        break\n      case Modulo.mod11:\n        kidSpan.innerText = generateKidMod11(kidBase, kidLength)\n        break\n      default:\n        kidSpan.innerText =\n          \"Something went wrong. Please ensure you've selected a supported modulo.\"\n    }\n  } catch (e) {\n    document.querySelector('.js-kid-nummer').innerText = e.message\n  }\n}\n\nfunction newFnr() {\n  const fnrSpan = document.querySelector('.js-fnr')\n  const fnrType = document.querySelector('select#fnr_type').value\n  const gender = document.querySelector('select#gender').value\n  fnrSpan.innerText = generateFnr(gender, fnrType)\n}\n\nfunction newOrgNr() {\n  const orgSpan = document.querySelector('.js-orgnr')\n  orgSpan.innerText = orgnr()\n}\n\nfunction newKontoNr() {\n  const bankRegistrySelect = document.getElementById('bankregistry')\n  const selectedRegistryNumber =\n    bankRegistrySelect.options[bankRegistrySelect.options.selectedIndex].value\n  const { number } = generateAccountNumber(selectedRegistryNumber)\n  document.querySelector('.js-kontonr').innerText = number\n}\n\nfunction validateKontoNr(e) {\n  e.preventDefault()\n  const accountNumberInput = document.querySelector('input#accountnumber')\n  const resultSpan = document.querySelector('span#accont_validation_result')\n  const initialAccountNumber = '' + accountNumberInput.value\n  const accountNumber = accountNumberInput.value.replace(/\\s+/g, '')\n  if (accountNumber.length !== 11) {\n    resultSpan.textContent = 'Et gyldig norsk kontonummer har kun 11 siffer'\n    accountNumberInput.value = ''\n    return\n  }\n  const isValidAccountNumber = validateAccountNumber(accountNumber)\n  const registryEntry = isValidAccountNumber\n    ? getBankRegistryEntryByAccountNumber(accountNumber)\n    : null\n  resultSpan.textContent = `${initialAccountNumber} er et ${\n    isValidAccountNumber ? 'gyldig' : 'ugyldig'\n  } kontonummer. ${\n    registryEntry\n      ? `kontonummeret tilhører ${registryEntry.bank} med SWIFT-kode ${registryEntry.bic}`\n      : ''\n  }`\n  accountNumberInput.value = ''\n}\n\nfunction validateKidNr(e) {\n  e.preventDefault()\n  try {\n    const kid = document\n      .querySelector('input#kidNumberValidation')\n      .value.toString()\n    const modulo = document.querySelector('select#modulo_validate').value\n\n    let isValid\n    switch (modulo) {\n      case Modulo.mod10:\n        isValid = validateKid_mod10(kid)\n        break\n      case Modulo.mod11:\n        isValid = validateKid_mod11(kid)\n        break\n      default:\n        isValid = false\n    }\n    const resultSpan = document.querySelector('span#kidr_validation_result')\n    resultSpan.textContent = `${kid} er et ${\n      isValid ? 'gyldig' : 'ugyldig'\n    } kidnummer.`\n  } catch (error) {\n    resultSpan.textContent = error.message\n  }\n}\n\nfunction validateFnrForm(e) {\n  e.preventDefault()\n  const fNrInput = document.querySelector('input#fnr_validation')\n  const resultSpan = document.querySelector('span#fnr_validation_result')\n  const initialFnr = '' + fNrInput.value\n  const fnrToCheck = initialFnr.replace(/\\s+/g, '')\n  const { success, msg, fnr } = validateFnr(fnrToCheck)\n\n  resultSpan.textContent = msg\n  fNrInput.value = ''\n}\n\nfunction queryPostal(e) {\n  const value = e.target.value\n  if (!value || value.length !== 4) {\n    document.querySelector('[name=\"kommune\"]').value = ''\n    return\n  }\n  const postalCode = parseInt(value)\n  const municipality = postnummer(postalCode)\n  document.querySelector('[name=\"kommune\"]').value = municipality || ''\n}\n\nnewOrgNr()\nnewFnr()\n\ndocument.querySelector('.js-gen-orgnr').addEventListener('click', newOrgNr)\ndocument.querySelector('.js-gen-fnr').addEventListener('click', newFnr)\ndocument.querySelector('.js-gen-kid').addEventListener('click', newKidNr)\ndocument.querySelector('.js-gen-kontonr').addEventListener('click', newKontoNr)\ndocument\n  .querySelector('.js-val-kontonr')\n  .addEventListener('click', validateKontoNr)\ndocument.querySelector('.js-val-kidnr').addEventListener('click', validateKidNr)\ndocument.querySelector('.js-val-fnr').addEventListener('click', validateFnrForm)\ndocument\n  .querySelector('[name=\"postnummer\"]')\n  .addEventListener('input', queryPostal)\n"],"sourceRoot":""}